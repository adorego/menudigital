{"version":3,"sources":["webpack:///src/app/shared/layout/layout.component.ts","webpack:///src/app/shared/layout/layout.component.html","webpack:///src/app/configuration/services/menuListFacade.service.ts","webpack:///src/app/core/state/menuItems-state.service.ts","webpack:///src/app/core/http/publicMenu.service.ts","webpack:///src/app/authentication/components/register/register.component.ts","webpack:///src/app/authentication/components/register/register.component.html","webpack:///src/app/authentication/container/auth-page/auth-page.component.ts","webpack:///src/app/authentication/container/auth-page/auth-page.component.html","webpack:///src/app/configuration/configuration-routing.module.ts","webpack:///src/app/core/interceptors/index.ts","webpack:///src/app/shared/expansion-helper/expansion-helper.component.ts","webpack:///src/app/shared/expansion-helper/expansion-helper.component.html","webpack:///src/app/configuration/services/localConfigurationFacade.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/authentication/components/login/login.component.ts","webpack:///src/app/authentication/components/login/login.component.html","webpack:///src/app/configuration/menu-configuration/container/menu-list.component.ts","webpack:///src/app/configuration/menu-configuration/container/menu-list.component.html","webpack:///src/app/authentication/services/authFacade.service.ts","webpack:///src/app/core/state/local-state.service.ts","webpack:///src/app/core/http/localConfiguration.service.ts","webpack:///src/app/shared/header/components/user-menu/user-menu.component.ts","webpack:///src/app/shared/header/components/user-menu/user-menu.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/interceptors/httpErrorHandler.interceptor.ts","webpack:///src/app/core/http/menuConfiguracion.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/http/authentication.service.ts","webpack:///src/app/shared/header/container/header.component.ts","webpack:///src/app/shared/header/container/header.component.html","webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/services/passwordMatchValidation.service.ts","webpack:///src/app/configuration/menu-configuration/components/form-menu-item/form-menu-item.component.ts","webpack:///src/app/configuration/menu-configuration/components/form-menu-item/form-menu-item.component.html","webpack:///src/app/configuration/local-configuration/local-configuration.component.ts","webpack:///src/app/configuration/local-configuration/local-configuration.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/configuration/menu-configuration/components/form-seccion/form-seccion.component.ts","webpack:///src/app/configuration/menu-configuration/components/form-seccion/form-seccion.component.html","webpack:///src/app/shared/sidebar/sidebar.component.html","webpack:///src/app/shared/sidebar/sidebar.component.ts","webpack:///src/app/shared/pipes/guarani-currency.pipe.ts","webpack:///src/app/core/state/secciones-state.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/core/state/storage.ts","webpack:///src/app/configuration/configuration.module.ts","webpack:///src/app/core/state/user-state.service.ts","webpack:///src/app/shared/alert-dialog/alert-dialog.component.ts","webpack:///src/app/shared/alert-dialog/alert-dialog.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LayoutComponent","authFacade","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","console","log","navList$","getUserSideBarNav","getUserState","user","userName","name","split","logOut","event","sideNav","open","close","label","icon","routeLink","signOut","toggleSideNav","MenuListFacade","menuConfigurationService","seccionesStateService","localConfigurationFacade","toastr","nuevaSeccionMenu","updateLocalState","local","Array","createSeccion","_id","seccion","success","addSeccion","error","subscribe","nuevaSeccion","toDeleteSeccion","deleteSeccion","updateSeccionState","getSecciones","Object","secciones","setSecciones","secciones$","newItemMenu","createItemMenu","menuItem","todeleteMenuItem","deleteItemMenu","MenuItemsStateService","_menuItems","menuItems$","asObservable","menuItems","next","PublicMenuService","apiUrl","http","nameUrl","url","get","RegisterComponent","passwordMatchValidationService","dialogRef","sendSignForm","form","required","email","password","repassword","validators","MatchPassword","valid","emit","value","onNoClick","sign","AuthPageComponent","dialog","dialogRegisterRef","createMatDialogConfig","subscriptionRegisterDialog","componentInstance","formData","register","dialogLoginRef","subscriptionLoginDialog","sendLoginForm","login","dialogConfig","position","width","height","minWidth","minHeight","panelClass","userState$","userStateSubscription","unsubscribe","registrarme","routes","path","component","ConfigurationRoutingModule","forChild","httpInterceptorProviders","provide","useClass","multi","ExpansionHelperComponent","fb","expansionArrayModel","tipo","arrayTamano","length","tamano","formGroupTamano","group","titulo","descripcion","precio","imagen","imagenUrl","propiedades","cantComensales","cantPorciones","pesoEnGr","LocalConfigurationFacade","localconfigurationService","authenticationService","localState","router","baseUrlMenu","local$","getCurrentUser","getLocalByUserId","subs","updateLocal","setLocal","createLocal","estatus","navigateByUrl","urlmenu","propuestaUrlMenu","queryUrlMenu","locales","environment","production","LoginComponent","formBuilder","MenuListComponent","menuListFacade","menuItemSubscription","seccionSubscription","seccionesState","onSaveSeccion","seccionMenu","onSaveMenuItem","nueva_seccion","AuthFacade","authService","userStateService","localSubscription","setUser","next_path","unsubscribeLocal","user$","sidenavLinks$","logout","LocalStateService","_local","localParam","LocalConfigurationService","userId","propuestaUrl","post","put","UserMenuComponent","signOutEmit","AuthenticationModule","customCurrencyMaskConfig","align","allowNegative","allowZero","decimal","precision","prefix","suffix","thousands","nullable","min","max","inputMode","NATURAL","SharedModule","forRoot","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","resolve","module","exports","AppComponent","title","HttpErrorHandlerInterceptor","token_name","toasterService","token","localStorage","getItem","clone","headers","set","has","handle","evt","body","message","positionClass","errorMessage","ErrorEvent","status","MenuConfigurationService","localId","seccionId","menuitem","loadmenuItemFormData","FormData","append","nombre","AppModule","AuthenticationService","storage","apiBaseUrl","tokenName","response","setItem","loggedUser","JSON","parse","atob","getToken","payload","exp","Date","now","isLoggedIn","profile","removeItem","HeaderComponent","signOutEvent","menuClick","toggleValue","AuthenticationRoutingModule","PasswordMatchValidationService","control","regex","RegExp","test","invalidPassword","confirmPassword","formGroup","passwordControl","controls","confirmPasswordControl","errors","passwordMismatch","setErrors","userControl","Promise","setTimeout","validateUserName","userNameNotAvailable","UserList","indexOf","FormMenuItemComponent","imagenMenuItem","menuItemFormGroup","document","getElementById","click","reader","FileReader","target","files","file","readAsDataURL","onload","patchValue","LocalConfigurationComponent","localconfigurationFacade","showMessage","subscriptionLocal$","localForm","nombreDelLocal","ruc","direccionDelLocal","nombreDelContacto","emailDelContacto","celularDelContacto","urlMenuDigital","localNameUrl","actualizar_campos","verificarMenuDigitalUrl","localNombreUrl","toLowerCase","replace","urlMenu","num","lastIndexOf","substring","invalid","saveLocal","onSubmit","modificarNombre","CoreModule","FormSeccionComponent","seccionFormGroup","puesto","crear_seccion","SidebarComponent","GuaraniCurrencyPipe","val","undefined","toLocaleString","style","currency","SeccionesStateService","_secciones","getValue","push","redirectTo","pathMatch","loadChildren","then","m","ConfigurationModule","DashboardModule","PublicMenuModule","AppRoutingModule","BROWSER_STORAGE","providedIn","factory","TOKEN_NAME","API_URL","UserStateService","_user","_sidenavLinks","userParam","role","setUserNavLinksByProfile","getUserNavLinks","AlertDialogComponent","data","bootstrapModule","err","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Observable, of } from 'rxjs';\nimport { AuthFacade } from 'src/app/authentication/services/authFacade.service';\nimport { SidebarLink } from 'src/app/core/models/sidebar.model';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { map, shareReplay, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  navList$:Observable<SidebarLink[]>;\n  \n  @ViewChild(\"sideNav\") sideNav: MatSidenav;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => \n        result.matches),\n        tap((result) => {console.log('Matches', result);}),\n      shareReplay()\n    );\n  \n  constructor(private authFacade:AuthFacade, private breakpointObserver: BreakpointObserver) { \n    this.navList$ = this.authFacade.getUserSideBarNav();\n    \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  public getUserName():Observable<string>{\n    return this.authFacade.getUserState()\n      .pipe(\n        map(\n          (user) =>{\n            if(user!=null){\n              let userName:string[] = user.name.split(\" \", 1);\n              return userName[0];\n            }else{\n              return null;\n            }\n          }\n        )\n      )\n    \n    \n    \n  }\n  public signOut(){\n    this.authFacade.logOut();\n  }\n\n  toggleSideNav(event){\n    event? this.sideNav.open() : this.sideNav.close();\n  }\n\n\n  getDummyNavList():Observable<SidebarLink[]>{\n        return of([\n          {\n            label: 'Reportes',\n            icon: 'analytics',\n            routeLink: '/dashboard'\n          },\n          {\n            label: 'Mi Local',\n            icon: 'build',\n            routeLink: '/configuracion/local'\n          },\n          {\n              label: 'Mi Local',\n              icon: 'build',\n              routeLink: '/configuracion/local'\n          },\n          {\n              label: 'Pedidos',\n              icon: 'topic',\n              routeLink: '/pedidos'\n          }\n      ]);\n  }\n}\n","<app-header [userName$]=\"getUserName()\" (signOutEvent)=\"signOut()\" (menuClick)=\"toggleSideNav($event)\"></app-header>\n<mat-sidenav-container  class=\"layout\">\n    <mat-sidenav\n        #sideNav\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n        [opened]=\"(isHandset$ | async) === false\"\n        >\n        <app-sidebar [sidebarLinks$]=\"navList$\"></app-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"layout-content\">\n        <ng-content></ng-content>\n    </mat-sidenav-content>\n\n\n\n\n\n</mat-sidenav-container>","import { Injectable } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { empty, Observable, of, throwError } from \"rxjs\";\nimport { map, mergeMap, switchMap, tap } from \"rxjs/operators\";\nimport { MenuConfigurationService } from \"src/app/core/http/menuConfiguracion.service\";\nimport { MenuItem } from \"src/app/core/models/menuItem.model\";\nimport { SeccionMenu } from \"src/app/core/models/seccion-menu.model\";\nimport { SeccionesStateService } from \"src/app/core/state/secciones-state.service\";\nimport { LocalConfigurationFacade } from \"./localConfigurationFacade.service\";\n\n\n@Injectable()\nexport class MenuListFacade{\n\n    constructor(\n        private menuConfigurationService: MenuConfigurationService,\n        private seccionesStateService:SeccionesStateService, \n        private localConfigurationFacade:LocalConfigurationFacade,\n        private toastr: ToastrService)\n        {}\n\n    public createSeccion(nuevaSeccionMenu:SeccionMenu):void{\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    if(local instanceof Array)\n                        return this.menuConfigurationService.createSeccion(local[0]._id, nuevaSeccionMenu);\n                    else\n                    return this.menuConfigurationService.createSeccion(local._id, nuevaSeccionMenu);\n                }\n            ),\n            tap(\n                (seccion) => {\n                    if(seccion){\n                        this.toastr.success('Seccion creada correctamente', 'Mensaje');\n                        this.seccionesStateService.addSeccion(seccion);\n                        \n                    }else{\n                        this.toastr.error('Error al crear la Sección', 'Mensaje');\n                    }\n                }\n            )\n        )\n        .subscribe(\n            (nuevaSeccion) => {\n                console.log('Nueva Seccion creada:', nuevaSeccion);\n            }\n        )\n                \n        \n    \n        \n        \n    }\n\n    public deleteSeccion(toDeleteSeccion:SeccionMenu):void{\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    return this.menuConfigurationService.deleteSeccion(local[0]._id, toDeleteSeccion._id)\n                }\n            )\n        )\n        .subscribe(\n            () => {\n                this.toastr.success('Sección eliminada correctamente', 'Mensaje')\n                this.updateSeccionState();\n            }\n        )\n    }\n\n    public updateSeccionState():void{\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) =>{\n                    //console.log('Local._id:', local[0]._id);\n                    if(local instanceof Array)\n                        return this.menuConfigurationService.getSecciones(local[0]._id)\n                    else if(local instanceof Object)\n                        return this.menuConfigurationService.getSecciones(local._id)\n                    else\n                        return of([])\n                }\n            ),\n            tap(\n                (secciones) =>{\n                    console.log('Secciones:', secciones);\n                    this.seccionesStateService.setSecciones(secciones);\n                }\n            )\n        )\n        .subscribe(\n            (secciones) => console.log('Subscripcion en updateSeccionState:', secciones)\n        )\n           \n        \n    }\n\n    public seccionesState():Observable<SeccionMenu[]>{\n        return this.seccionesStateService.secciones$;\n    }\n\n\n\n    //Gestión de los MenuItems\n\n    public createItemMenu(newItemMenu:MenuItem):Observable<MenuItem>{\n        \n        return this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    if(local instanceof Array)\n                        return this.menuConfigurationService.createItemMenu(local[0]._id, newItemMenu)\n                    else\n                        return this.menuConfigurationService.createItemMenu(local._id, newItemMenu)\n                    .pipe(\n                        tap(\n                            (menuItem) => {\n                                if(menuItem){\n                                    this.toastr.success('MenuItem creado correctamente', 'Mensaje');\n                                    this.updateSeccionState();\n                                }else{\n                                    this.toastr.error('Error al crear el MenuItem', 'Mensaje');\n                                }\n                            }\n                        )\n                    )\n                }\n            )\n            \n        )\n        \n       \n\n        \n\n    }\n\n    public deleteItemMenu(todeleteMenuItem:MenuItem):void{\n        console.log('MenuItem a eliminar:', todeleteMenuItem);\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    return this.menuConfigurationService.deleteItemMenu(local[0]._id, todeleteMenuItem)\n                }\n            )\n        )\n        .subscribe(\n            () => {\n                this.toastr.success('MenuItem eliminado correctamente', 'Mensaje')\n                this.updateSeccionState();\n            }\n        )\n    }\n    \n    \n    \n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { MenuItem } from \"../models/menuItem.model\";\n\n@Injectable()\nexport class MenuItemsStateService{\n    private _menuItems: BehaviorSubject<MenuItem[]> = new BehaviorSubject<MenuItem[]>(null);\n\n    public readonly menuItems$:Observable<MenuItem[]> = this._menuItems.asObservable();\n\n    constructor(){}\n\n    public setLocal(menuItems:MenuItem[]){\n        \n        this._menuItems.next(menuItems);\n        \n    }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { API_URL } from \"../state/storage\";\n\n\n\n@Injectable()\nexport class PublicMenuService {\n\n    constructor(@Inject(API_URL) private apiUrl: string, private http:HttpClient){}\n\n    public getMenu(nameUrl:string):Observable<Local>{\n        const url:string = `${this.apiUrl}/menudigital/${nameUrl}`;\n        return this.http.get<Local>(url);\n    }\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PasswordMatchValidationService } from '../../services/passwordMatchValidation.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() sendSignForm = new EventEmitter<any>();\n  form:FormGroup;\n\n  constructor(private passwordMatchValidationService: PasswordMatchValidationService, public dialogRef: MatDialogRef<RegisterComponent> ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      repassword: new FormControl('', [Validators.required])\n    },\n    {\n      validators: this.passwordMatchValidationService.MatchPassword('password', 'repassword')\n    });\n  }\n\n  public sign(): void {\n    if (this.form.valid) {\n      this.sendSignForm.emit(this.form.value);\n      this.dialogRef.close();\n    }\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<form class=\"form\" [formGroup]=\"form\" (ngSubmit)=\"sign()\">\n  <h4 class=\"header_login\">Registrate!</h4>\n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Nombre Completo</mat-label>\n      <input type=\"text\" autocomplete=\"off\" matInput placeholder=\"Nombre completo\" formControlName=\"name\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Correo</mat-label>\n      <input matInput placeholder=\"Dirección de correo\" type=\"email\" autocomplete=\"off\" formControlName=\"email\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Clave</mat-label>\n      <input matInput placeholder=\"Clave de acceso\" type=\"password\" autocomplete=\"off\" formControlName=\"password\">\n    </mat-form-field>\n\n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Repetir la clave</mat-label>\n      <input matInput placeholder=\"Repite tu clave de acceso\" type=\"password\" autocomplete=\"off\" formControlName=\"repassword\">\n    </mat-form-field>\n  \n    <div class=\"form-actions\">\n      <button class=\"boton_crear\" mat-raised-button  type=\"submit\">Crea tu cuenta</button>\n    </div>\n</form>\n  \n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\nimport { LoginComponent } from '../../components/login/login.component';\nimport { RegisterComponent } from '../../components/register/register.component';\nimport { AuthFacade } from '../../services/authFacade.service';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.scss']\n})\nexport class AuthPageComponent implements OnInit, OnDestroy {\n\n    subscriptionLoginDialog:Subscription;\n    subscriptionRegisterDialog:Subscription;\n    dialogRegisterRef:MatDialogRef<RegisterComponent>;\n    dialogLoginRef:MatDialogRef<LoginComponent>;\n    userState$:Observable<User>;\n    userStateSubscription:Subscription;\n    constructor(public dialog: MatDialog, private authFacade: AuthFacade) { }\n    \n\n    public registrarme(){\n        this.dialogRegisterRef = this.dialog.open(RegisterComponent, this.createMatDialogConfig());\n        this.subscriptionRegisterDialog = this.dialogRegisterRef.componentInstance.sendSignForm.subscribe(\n          (formData:any) => {\n            //console.log('Datos del login:', formData);\n            this.authFacade.register(formData);\n\n            \n          }\n        );\n        \n      \n      }\n\n    public login(){\n        //console.log('AuthPage Login');\n        \n        this.dialogLoginRef = this.dialog.open(LoginComponent, this.createMatDialogConfig());\n        this.subscriptionLoginDialog = this.dialogLoginRef.componentInstance.sendLoginForm.subscribe(\n          (formData:any) => {\n            //console.log('Datos del login:', formData);\n            this.authFacade.login(formData);\n\n            \n          }\n        );\n        \n      }\n\n    private createMatDialogConfig():MatDialogConfig{\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.position ={\n          'top': '20px',\n          'left': '10px'\n        };\n        dialogConfig.width = '50%';\n        dialogConfig.height = '80vh';\n        dialogConfig.minWidth = '300px';\n        dialogConfig.minHeight = '300px';\n        dialogConfig.panelClass = \"my-dialog\";\n        return dialogConfig;\n      }\n\n      \n  \n  \n\n    ngOnInit(): void {\n        this.userState$ = this.authFacade.getUserState();\n        this.userStateSubscription = this.userState$.subscribe(\n          (user) => {\n            if(user){\n              if(this.dialogLoginRef){\n                this.dialogLoginRef.close();\n              }\n              if(this.dialogRegisterRef){\n                this.dialogRegisterRef.close();\n              }\n            }\n          }\n        )\n      }\n\n    ngOnDestroy(): void {\n        if (this.userStateSubscription)\n          this.userStateSubscription.unsubscribe();\n        if(this.subscriptionLoginDialog)\n          this.subscriptionLoginDialog.unsubscribe();\n        if(this.subscriptionRegisterDialog)\n          this.subscriptionRegisterDialog.unsubscribe();\n      }\n}\n","<div class=\"page\">\n    <div class=\"container\"> \n        <mat-toolbar>\n            <mat-toolbar-row fxLayout=\"row\" class=\"toolbar_container\" fxLayoutAlign=\"start end\" fxLayoutAlign.lt-md=\"space-between end\">\n                <button mat-icon-button [matMenuTriggerFor]=\"dropMenu\" fxHide fxShow.lt-md>\n                    <mat-icon>menu</mat-icon>\n                </button>\n                <mat-menu #dropMenu=\"matMenu\">\n                    <button mat-menu-item>\n                        Cómo funciona?\n                    </button>\n                    <button mat-menu-item>\n                        Cuánto cuesta?\n                    </button>\n                    <button mat-menu-item>\n                        Nosotros\n                    </button>\n                </mat-menu>\n                \n                <div fxFlex=\"1 1 auto\" class=\"logo_container\" fxHide.lt-md>\n                    <img  class=\"logo_img\" src=\"../../../../assets/imagenes/logo.png\">\n                </div>\n                \n                <div fxFlex=\"1 2 auto\" class=\"links_headers1\" fxHide.lt-md>\n                    <a mat-button href=\"\" target=\"_self\">Cómo funciona?</a> \n                    <a mat-button href=\"\" target=\"_self\">Cuánto cuesta?</a>\n                    <a mat-button href=\"\" target=\"_self\">Nosotros</a> \n                </div>\n                <div fxFlex=\"1 1 auto\" fxFlex.lt-md=\"2 1 100\" class=\"links_headers2\" ngClass.lt-md=\"links_headers2_md\">\n                    <a mat-button   (click)=\"registrarme()\">Registrarme</a> \n                    <a mat-button   (click)=\"login()\">Ingresar</a>\n                </div>\n                \n            </mat-toolbar-row>\n            <mat-toolbar-row fxHide fxShow.lt-md>\n                <img  class=\"logo_img_md\" src=\"../../../../assets/imagenes/logo.png\">\n            </mat-toolbar-row>\n        </mat-toolbar>\n        <div contenido>\n            <div fxLayout=row>\n                <h1 fxFlex=\"90\" class=\"header_h1 mat-display-3\">Tenés un local Gastronómico ?</h1>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxFlexFill fxLayoutAlign=\"start stretch\">\n                <div fxFlex=\"50\">\n                    <div fxLayout=\"column\" fxLayouAlign=\"space-between end\">\n                        <div fxFlex class=\"propuesta1 mat-display-1\">\n                            Con MenúDigital incrementás tus ventas mejorando la experiencia de compra de tu cliente digital\n                        </div>\n                        <div fxFlex class=\"propuesta2 mat-display-1\">\n                            MenúDigital te permite crear tu Menú en dos simples pasos...<a class=\"como_funciona_link\" href=\"#como_funciona\">Ver como funciona</a>\n                        </div>\n                    </div>\n                </div>\n                <div fxFlex=\"50\" fxLayoutAlign=\"center center\" class=\"cta_button_container\">\n                    <button class=\"cta_button\" mat-raised-button>Crea tu cuenta hoy</button>\n                </div>\n            </div>\n            \n        </div>\n    </div>    \n</div>\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalConfigurationComponent } from './local-configuration/local-configuration.component';\nimport { MenuListComponent } from './menu-configuration/container/menu-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocalConfigurationComponent\n  },\n  {\n    path: 'local',\n    component: LocalConfigurationComponent\n  },\n  {\n    path: 'menu',\n    component: MenuListComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigurationRoutingModule { }\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {HttpErrorHandlerInterceptor} from './httpErrorHandler.interceptor';\n\nexport const httpInterceptorProviders = [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpErrorHandlerInterceptor, multi: true}\n]","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ExpansionArrayModel } from 'src/app/core/models/expansion-helper-array.model';\n\n@Component({\n  selector: 'app-expansion-helper',\n  templateUrl: './expansion-helper.component.html',\n  styleUrls: ['./expansion-helper.component.scss']\n})\nexport class ExpansionHelperComponent implements OnInit {\n  @Input() expansionArrayModel:ExpansionArrayModel;\n  formGroupTamanos:FormGroup[];\n  constructor(private fb:FormBuilder) { }\n\n  ngOnInit(): void {\n    if(this.expansionArrayModel && this.expansionArrayModel.tipo==1){//ExpansionPanel del tipo Tamano\n      if(this.expansionArrayModel.arrayTamano.length>0){\n        for(let tamano of this.expansionArrayModel.arrayTamano){\n          let formGroupTamano:FormGroup = this.fb.group({\n            titulo:[tamano.titulo, Validators.required],\n            descripcion:[tamano.descripcion],\n            precio:['', Validators.required],\n            imagen:[''],\n            imagenUrl:[''],\n            propiedades: this.fb.group({\n              cantComensales:[''],\n              cantPorciones:[''],\n              pesoEnGr:['']\n            })\n\n          })\n        }\n      }\n    }\n  }\n\n}\n","<mat-accordion *ngIf=\"expansionArrayModel.conDatos\">\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{expansionArrayModel.titulo}}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-expansion-panel *ngFor=\"let tamano of expansionArrayModel.arrayTamano;index as i\" matExpansionPanelContent>\n            <mat-expansion-panel-header>\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox>{{tamano.titulo}}</mat-checkbox>\n                </div>\n            </mat-expansion-panel-header>\n            <div class=\"panel_container\">\n                <form [formGroup]=\"formGroupTamanos[i]\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Titulo</mat-label>\n                        <input matInput formControlName=\"titulo\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Descripcion</mat-label>\n                        <input matInput formControlName=\"descripcion\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Precio</mat-label>\n                        <input matInput formControlName=\"precio\">\n                    </mat-form-field>\n                    <div class=\"imagen_form\">\n                        <button *ngIf=\"!formGroupTamanos[i].get('imagenUrl').value\" mat-flat-button>Selecciona</button>\n                        <img *ngIf=\"formGroupTamanos[i].get('imagenUrl').value.length > 1\" src=\"{{formGroupTamanos[i].get('imagenUrl').value}}\">\n                    </div>\n                </form>\n            </div>\n        </mat-expansion-panel>\n    </mat-expansion-panel>\n\n</mat-accordion>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport {merge, Observable, of } from \"rxjs\";\nimport { concatMap, isEmpty, map, mergeMap, switchMap, tap } from \"rxjs/operators\";\nimport { AuthenticationService } from \"src/app/core/http/authentication.service\";\nimport { LocalConfigurationService } from \"src/app/core/http/localConfiguration.service\";\nimport { Local } from \"src/app/core/models/local.model\";\nimport { LocalStateService } from \"src/app/core/state/local-state.service\";\n\n@Injectable()\nexport class LocalConfigurationFacade{\n\n    baseUrlMenu:string = 'https://menudigital.com/';\n\n    constructor(\n        private localconfigurationService:LocalConfigurationService, \n        private authenticationService:AuthenticationService,\n        private localState:LocalStateService,\n        private router:Router,\n        private toastr: ToastrService){}\n    \n    \n\n    public updateLocalState():Observable<Local>{\n        return this.localState.local$\n            .pipe(\n                switchMap((local) =>{\n                    if(local==null && this.authenticationService.getCurrentUser() && this.authenticationService.getCurrentUser()._id){\n                        return this.localconfigurationService.getLocalByUserId(this.authenticationService.getCurrentUser()._id);\n                    }else{\n                        \n                        return of(local);\n                    }\n                })\n            )\n    }\n    public saveLocal(local:Local){\n        //console.log('Local recibido:', local);\n        let subs:Observable<Local> = null;\n        if(local._id){\n            //Update\n            subs = this.localconfigurationService.updateLocal(local)\n            .pipe(\n                tap(\n                    (local) => {\n                        if(local){\n                            this.localState.setLocal(local);\n                            this.toastr.success('Guardado con exito!', 'Mensaje')\n                        }else{\n                            this.toastr.error('Error al actualizar el local', 'Mensaje');\n                        }\n                    }\n                )\n            )\n        }else{\n            //New\n            subs = this.localconfigurationService.createLocal(local)\n            .pipe(\n                tap(\n                    (local) => {\n                        if(local){\n                            this.localState.setLocal(local);\n                            this.toastr.success('Local guardado con éxito!', 'Mensaje')\n                        }else{\n                            this.toastr.error('Error al crear el local', 'Mensaje');\n                        }\n                    }\n                )\n            )\n        }\n        //Subscribirse al Observable\n        subs.subscribe(\n            (local) => {\n                console.log('Local guardado/actualizado', local);\n                if(local.estatus==1){\n                    this.router.navigateByUrl('configuracion/menu');\n                }\n            }\n        )\n    }\n    \n    public getLocalState():Observable<Local>{\n        return this.localState.local$;\n    }\n\n    public queryUrlMenu(urlmenu:string):Observable<string>{\n        let propuestaUrlMenu = urlmenu;\n        return this.localconfigurationService.queryUrlMenu(urlmenu)\n                .pipe(\n                    switchMap(\n                        (locales) => {\n                            if(!locales || !locales.length){\n\n                                return of(this.baseUrlMenu+propuestaUrlMenu);\n                            }else{\n                                return of(this.baseUrlMenu+propuestaUrlMenu+'&');\n                            }\n                        }\n                    )\n                )\n        \n        \n        \n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'login-app',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  @Output() sendLoginForm = new EventEmitter<any>();\n  form: FormGroup;\n  \n\n  constructor(private readonly formBuilder:FormBuilder, public dialogRef: MatDialogRef<LoginComponent>) {\n    this.form = this.formBuilder.group(\n      {\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required])\n      });\n   }\n\n  ngOnInit(): void {\n  }\n\n  \n  //Cerrar dialogo de Nuevo MenuItem\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n  public login(): void {\n    //console.log('LoginComponent.login()');\n    \n    if (this.form.valid) {\n      this.sendLoginForm.emit(this.form.value);\n      \n    }\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<div class=\"mat-title\">Ingresa a tu MenúDigital</div>\n<div mat-dialog-content>\n  <form [formGroup]=\"form\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n        <!--h4 class=\"header_login\">Ingresa a tu MenuDigital</h4-->\n        <mat-form-field class=\"input_field\" appearance=\"outline\">\n            <mat-label>Correo</mat-label>\n            <input id=\"correo\" matInput placeholder=\"Correo electrónico\" type=\"email\" autocomplete=\"off\" formControlName=\"email\">\n          </mat-form-field>\n        \n          <mat-form-field class=\"input_field\" appearance=\"outline\">\n            <mat-label>Clave</mat-label>\n            <input matInput placeholder=\"Clave\" type=\"password\" autocomplete=\"off\" formControlName=\"password\">\n          </mat-form-field>\n        \n          <div fxLayout=\"column\" fxLayoutGap=\"3vh\" class=\"form-actions\">\n            <button class=\"boton_ingresar\" mat-raised-button  type=\"submit\">Ingresar</button>\n            <a class=\"enlace_olvide_clave\" >Olvide mi clave</a>\n            \n          </div>\n        \n    </form>\n  </div>\n  \n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Subscription } from 'rxjs';\nimport { MenuItem } from 'src/app/core/models/menuItem.model';\nimport { SeccionMenu } from 'src/app/core/models/seccion-menu.model';\nimport { AlertDialogComponent } from 'src/app/shared/alert-dialog/alert-dialog.component';\nimport { MenuListFacade } from '../../services/menuListFacade.service';\nimport { FormMenuItemComponent } from '../components/form-menu-item/form-menu-item.component';\nimport { FormSeccionComponent } from '../components/form-seccion/form-seccion.component';\n\n@Component({\n  selector: 'app-menu-list',\n  templateUrl: './menu-list.component.html',\n  styleUrls: ['./menu-list.component.scss']\n})\nexport class MenuListComponent implements OnInit, OnDestroy {\n  \n  secciones$:Observable<SeccionMenu[]>;\n  seccionSubscription:Subscription;\n  menuItemSubscription:Subscription;\n\n  constructor(public dialog: MatDialog,private fb: FormBuilder, private menuListFacade: MenuListFacade) \n  {\n\n\n  }\n  \n  ngOnDestroy(): void {\n    if(this.menuItemSubscription)\n      this.menuItemSubscription.unsubscribe();\n    if(this.seccionSubscription)\n      this.seccionSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.secciones$ = this.menuListFacade.seccionesState();\n    this.menuListFacade.updateSeccionState();\n    \n  }\n\n  public nueva_seccion(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.position ={\n      'top': '20px',\n      'left': '10px'\n    };\n    dialogConfig.width = '50%';\n    dialogConfig.height = '80vh';\n    dialogConfig.minWidth = '300px';\n    dialogConfig.minHeight = '300px';\n    dialogConfig.panelClass = \"my-dialog\";\n    const dialogRef = this.dialog.open(FormSeccionComponent, dialogConfig);   \n    this.seccionSubscription = dialogRef.componentInstance.onSaveSeccion.subscribe(\n      (seccionMenu) => {\n        this.menuListFacade.createSeccion(seccionMenu);\n      }\n    )\n\n    \n  }\n\n  nuevo_item(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.position ={\n      'top': '20px',\n      'left': '10px'\n    };\n    dialogConfig.width = '50%';\n    dialogConfig.height = '100vh';\n    dialogConfig.minWidth = '320px';\n    dialogConfig.minHeight = '100vh';\n    dialogConfig.panelClass = \"my-dialog\";\n    const dialogRef = this.dialog.open(FormMenuItemComponent, dialogConfig);   \n    this.menuItemSubscription = dialogRef.componentInstance.onSaveMenuItem.subscribe(\n      (menuItem) => {\n        //Enviar el nuevo MenuItem a la BD\n      }\n    )\n  }\n\n  \n}\n","<app-layout>\n    <div class=\"mat-headline\">Mi MenúDigital</div>\n    <div class=\"mat-subheading-2 heading_icon\">\n        <a (click)=\"nueva_seccion()\">\n            <mat-icon class=\"material-icons\" aria-hidden=\"false\" aria-label=\"Icono de add\">add_circle_outline</mat-icon>\n        \n            Nueva Sección del Menú\n        </a>\n    </div>\n    <div class=\"secciones_del_menu\">\n        <mat-accordion *ngIf=\"secciones$|async as secciones else sinSecciones\">\n            <mat-expansion-panel *ngFor=\"let seccion of secciones\" (opened)=\"true\">\n                <mat-expansion-panel-header>\n                        <mat-panel-title class=\"mat-h4\">\n                            {{seccion.titulo}}\n                        </mat-panel-title>\n                        \n                </mat-expansion-panel-header>\n                <ng-template matExpansionPanelContent>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                        <div class=\"mat-small seccion_descripcion\" fxFlexAlign=\"center\">\n                            {{seccion.descripcion}}\n                        </div>\n                        <div>\n                            <button mat-icon-button aria-label=\"Editar seccion\"  matTooltip=\"Editar Seccion\">\n                                <mat-icon>create</mat-icon>\n                            </button>\n                            <button mat-icon-button aria-label=\"Eliminar seccion\" matTooltip=\"Eliminar Seccion\">\n                                <mat-icon>delete</mat-icon>\n                            </button>\n                        </div>\n\n                    </div>\n                    <div class=\"mat-subheading-4 heading_icon\">\n                        <a (click)=\"nuevo_item()\">\n                            <mat-icon class=\"material-icons\" aria-hidden=\"false\" aria-label=\"Icono de add\">add_circle_outline</mat-icon>\n                        \n                            Nuevo MenúItem\n                        </a>\n                    </div>\n                </ng-template>    \n            </mat-expansion-panel>\n        </mat-accordion>\n    </div>\n    <ng-template #sinSecciones>\n        <div class=\"mat-h4\">No tiene secciones en su Menú</div>\n    </ng-template>\n</app-layout>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport { LocalConfigurationFacade } from \"src/app/configuration/services/localConfigurationFacade.service\";\nimport { AuthenticationService } from \"src/app/core/http/authentication.service\";\nimport { SidebarLink } from \"src/app/core/models/sidebar.model\";\nimport { User } from \"src/app/core/models/user.model\";\nimport { UserStateService } from \"src/app/core/state/user-state.service\";\n\n@Injectable()\nexport class AuthFacade{\n    localSubscription:Subscription;\n    constructor(\n        private authService:AuthenticationService, \n        private userStateService: UserStateService, \n        private router:Router,\n        private localConfigurationFacade:LocalConfigurationFacade){}\n\n    public login(user:User):void{\n         this.localSubscription = this.authService.login(user).pipe(\n            tap((user) =>{\n                this.userStateService.setUser(user);\n                \n                \n            }),\n            switchMap(\n                (user)=>{\n                    return this.localConfigurationFacade.updateLocalState();\n                }\n            )\n          ).subscribe(\n              (local) => {\n                  console.log('Local:', local[0]);\n                  this.router.navigateByUrl(this.next_path(local[0].estatus));\n                  this.unsubscribeLocal();  \n              }\n          )\n          \n    }\n\n    private unsubscribeLocal(){\n        this.localSubscription.unsubscribe();\n    }\n    private next_path(estatus:number){\n        if(estatus==0){\n            return ('configuracion/local');\n            \n        }else if(estatus==1){\n            return ('configuracion/menu');\n            \n        }else if(estatus==2){\n            return('dashboard');\n        }\n        return 'login'\n    }\n\n    public register(user:User):void{\n        this.authService.register(user).pipe(\n            tap((user) =>{\n                this.userStateService.setUser(user);\n                \n                \n            }),\n            switchMap(\n                (user)=>{\n                    return this.localConfigurationFacade.updateLocalState();\n                }\n            )\n          ).subscribe(\n            (local) => {\n                this.router.navigateByUrl(this.next_path(local.estatus));\n              \n            }\n          )\n\n    }\n    public getUserState():Observable<User>{\n        return this.userStateService.user$;\n    }\n\n    public getUserSideBarNav():Observable<SidebarLink[]>{\n        \n        return this.userStateService.sidenavLinks$;\n    }\n    public logOut(){\n        this.authService.logout();\n        this.router.navigateByUrl('login');\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\n\n@Injectable()\nexport class LocalStateService{\n    private _local: BehaviorSubject<Local> = new BehaviorSubject<Local>(null);\n\n    public readonly local$:Observable<Local> = this._local.asObservable();\n\n    constructor(){}\n\n    public setLocal(localParam:Local){\n        console.log('LocalState:', localParam);\n        this._local.next(localParam);\n        \n    }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { API_URL } from \"../state/storage\";\n\n@Injectable()\nexport class LocalConfigurationService {\n\n    constructor(@Inject(API_URL) private apiUrl: string, private http:HttpClient){}\n\n    public getLocalByUserId(userId:string):Observable<Local>{\n        let url:string = `${this.apiUrl}/locales/byuser/${userId}`;\n        return this.http.get<Local>(url);\n            \n\n    }    \n\n    public queryUrlMenu(propuestaUrl:string):Observable<Local[]>{\n        let url:string = `${this.apiUrl}/locales/byurlmenu/${propuestaUrl}`;\n        return this.http.get<Local[]>(url);\n    }\n\n    public createLocal(local:Local):Observable<Local>{\n        if(local){\n            let url:string = `${this.apiUrl}/locales`;\n            return this.http.post<Local>(url, local);\n        }\n        return null;\n    }\n\n    public updateLocal(local:Local):Observable<Local>{\n        //console.log('Local recibido:', local);\n        if(local){\n            let url:string = `${this.apiUrl}/locales/${local._id}`;\n            return this.http.put<Local>(url, local);\n        }\n        return null;\n        \n    }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\n\n@Component({\n  selector: 'app-user-menu',\n  templateUrl: './user-menu.component.html',\n  styleUrls: ['./user-menu.component.scss']\n})\nexport class UserMenuComponent implements OnInit {\n\n  userName:String='';\n  @Output() signOut: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public signOutEmit(): void {\n    this.signOut.emit();\n  }\n}\n","<button class=\"user-button\" mat-mini-fab [matMenuTriggerFor]=\"userMenu\">\n    <mat-icon class=\"user-button__icon\">person</mat-icon>\n</button>\n<mat-menu #userMenu=\"matMenu\" xPosition=\"before\">\n    <div class=\"user-menu-title\">\n        <h4 class=\"user-menu-title__name\">{{userName}}</h4>\n    </div>    \n    <div class=\"sign-button-wrapper\">\n        <button class=\"sign-button\" mat-flat-button (click)=\"signOutEmit()\">Sign out</button>\n    </div>\n</mat-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthPageComponent } from './container/auth-page/auth-page.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PasswordMatchValidationService } from './services/passwordMatchValidation.service';\nimport { AuthFacade } from './services/authFacade.service';\nimport { ConfigurationModule } from '../configuration/configuration.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, AuthPageComponent, RegisterComponent],\n  imports: [\n    AuthenticationRoutingModule,\n    SharedModule,\n    ConfigurationModule\n  ],\n  providers:[\n    PasswordMatchValidationService,\n    AuthFacade\n  ]\n})\nexport class AuthenticationModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HeaderComponent} from './header/container/header.component';\nimport {UserMenuComponent} from './header/components/user-menu/user-menu.component';\nimport {SidebarComponent} from './sidebar/sidebar.component';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {LayoutComponent} from './layout/layout.component';\nimport {RouterModule} from '@angular/router';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {AlertDialogComponent} from './alert-dialog/alert-dialog.component';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatMomentDateModule} from '@angular/material-moment-adapter';\nimport {NgxCurrencyModule, CurrencyMaskInputMode} from 'ngx-currency';\nimport { GuaraniCurrencyPipe } from './pipes/guarani-currency.pipe';\nimport { ExpansionHelperComponent } from './expansion-helper/expansion-helper.component';\n\n\n\nexport const customCurrencyMaskConfig = {\n  align: \"left\",\n  allowNegative: false,\n  allowZero: false,\n  decimal: \",\",\n  precision: 0,\n  prefix: \"Gs \",\n  suffix: \"\",\n  thousands: \".\",\n  nullable: true,\n  min: null,\n  max: null,\n  inputMode: CurrencyMaskInputMode.NATURAL\n};\n\n\n\n\n\n@NgModule({\n  declarations: \n  [\n    HeaderComponent, \n    UserMenuComponent, \n    SidebarComponent, \n    LayoutComponent,\n    AlertDialogComponent,\n    GuaraniCurrencyPipe,\n    ExpansionHelperComponent\n    \n  ],\n  imports: \n  [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,//Module FlexLayout\n    NgxCurrencyModule.forRoot(customCurrencyMaskConfig), //Modulo para manejo de input de dinero\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatMomentDateModule\n    \n\n\n  ],\n  exports:\n  [\n    CommonModule,\n    LayoutComponent,\n    NgxCurrencyModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    GuaraniCurrencyPipe,\n    ExpansionHelperComponent\n    \n    \n\n  ]\n})\nexport class SharedModule { }\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MenúDigital';\n}\n","<router-outlet></router-outlet>","import { Inject, Injectable } from \"@angular/core\";\nimport {HttpHandler, HttpInterceptor, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse} from '@angular/common/http';\nimport { Observable, of, throwError } from \"rxjs\";\nimport {catchError, map, retry, tap} from \"rxjs/operators\";\nimport {TOKEN_NAME } from \"../state/storage\";\nimport { ToastrService } from \"ngx-toastr\";\n\n\n@Injectable()\nexport class HttpErrorHandlerInterceptor implements HttpInterceptor{\n    constructor(@Inject(TOKEN_NAME) private token_name: string, public toasterService: ToastrService ){}\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n        \n        const token: string = localStorage.getItem(this.token_name);\n        //console.log('Interceptor.req', req);\n        if (token) {\n            req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\n        }\n\n        if (!req.headers.has('Content-Type')) {\n            //req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\n        }\n\n        req = req.clone({ headers: req.headers.set('Accept', 'application/json') });\n\n        return next.handle(req).pipe(\n            retry(1),\n            tap( (evt:any) => {\n                if(evt instanceof HttpResponse){\n                    if(evt.body && evt.body.success){\n                        this.toasterService.success(evt.body.success.message, \n                            evt.body.success.title, { positionClass: 'toast-top-center' });\n                    }\n                }\n            }),\n            catchError((error: any) => {\n                let errorMessage = '';\n                if(error.error instanceof ErrorEvent){\n                    //client side error\n                    errorMessage = `Error: ${error.error.message}`;\n                    this.toasterService.error(error.error.message, error.error.title, { positionClass: 'toast-top-center' });\n                }else{\n                    errorMessage = `Error status: ${error.status}\\nMessage: ${error.message}`;\n                    this.toasterService.error(error.error.message, error.error.title, { positionClass: 'toast-top-center' });\n                }\n                console.log(errorMessage);\n                return of(error);\n            })\n        )\n    }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { MenuItem } from \"../models/menuItem.model\";\nimport { SeccionMenu } from \"../models/seccion-menu.model\";\nimport { API_URL } from \"../state/storage\";\n\n@Injectable()\nexport class MenuConfigurationService {\n\n    constructor(@Inject(API_URL) private apiUrl: string, private http:HttpClient){}\n\n    public getSecciones(localId:string):Observable<SeccionMenu[]>{\n        let url:string = `${this.apiUrl}/locales/${localId}/secciones/`;\n        console.log('Url a llamar:', url);\n        return this.http.get<SeccionMenu[]>(url);\n    }\n    \n    public createSeccion(localId:string,nuevaSeccion:SeccionMenu):Observable<SeccionMenu>{\n        if(nuevaSeccion){\n            let url:string = `${this.apiUrl}/locales/${localId}/secciones/`;\n            //console.log('Url:', url);\n            return this.http.post<SeccionMenu>(url, nuevaSeccion);\n        }\n        return null;\n    }\n\n    public deleteSeccion(localId:string, seccionId:string):Observable<{}>{\n        \n        let url:string = `${this.apiUrl}/locales/${localId}/secciones/${seccionId}`;\n        console.log('Url a llamar con delete:', url);\n        return this.http.delete(url);\n    }\n\n    public createItemMenu(localId:string, menuitem:MenuItem):Observable<MenuItem>{\n        console.log('MenuItem recibido:', menuitem);\n        const formData = this.loadmenuItemFormData(menuitem);\n        if(formData != null){\n            console.log(formData.get('nombre')+\",\"+ formData.get('descripcion')+\",\"+formData.get('precio')+\",\"+formData.get('imagen')+\",\"+formData.get('tamano'));\n            let url:string = `${this.apiUrl}/locales/${localId}/secciones/${menuitem.seccion}/menuitems`;\n            console.log('Url:', url);\n            return this.http.post<MenuItem>(url, formData);\n        }\n        return null;\n    }\n    private loadmenuItemFormData(menuitem:MenuItem):FormData{\n        if(menuitem && menuitem.seccion && menuitem.seccion){\n            let formData:any = new FormData();\n            formData.append('nombre',menuitem.nombre);\n            formData.append('descripcion',menuitem.descripcion);\n            formData.append('precio', menuitem.precio);\n            formData.append('seccion', menuitem.seccion);\n            formData.append('imagen',menuitem.imagen);\n           \n            return formData;\n        }\n        return null;\n    }\n\n    public updateMenuItem(localId:string, menuitem:MenuItem):Observable<MenuItem>{\n        console.log('MenuItem recibido:', menuitem);\n        const formData = this.loadmenuItemFormData(menuitem);\n        if(formData != null){\n            console.log(formData.get('nombre')+\",\"+ formData.get('descripcion')+\",\"+formData.get('precio')+\",\"+formData.get('imagen')+\",\"+formData.get('tamano'));\n            let url:string = `${this.apiUrl}/locales/${localId}/secciones/${menuitem.seccion}/menuitems`;\n            console.log('Url:', url);\n            return this.http.put<MenuItem>(url, formData);\n        }\n        return null;\n    }\n\n    public deleteItemMenu(localId:string, menuitem:MenuItem):Observable<{}>{\n        console.log('MenuItem a eliminar:', menuitem, \" del local:\", localId);\n        let url:string = `${this.apiUrl}/locales/${localId}/secciones/${menuitem.seccion}/menuitems/${menuitem._id}`;\n        console.log('Url a llamar con delete:', url);\n        return this.http.delete(url);\n    }\n\n\n    \n    public updateLocal(local:Local):Observable<Local>{\n        if(local){\n            let url:string = `${this.apiUrl}/locales/${local._id}`;\n            return this.http.put<Local>(url, local);\n        }\n        return null;\n        \n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {AuthenticationModule} from './authentication/authentication.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CoreModule } from './core/core.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AuthenticationModule,\n    CoreModule,\n    ToastrModule.forRoot()\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport { AuthResponse } from \"../models/authresponse.model\";\nimport { User } from \"../models/user.model\";\nimport { BROWSER_STORAGE } from \"../state/storage\";\n\n@Injectable()\nexport class AuthenticationService {\n    private apiBaseUrl = 'http://localhost:3000/api';\n    private tokenName: string = \"menuDigital-token\";\n\n    constructor(@Inject(BROWSER_STORAGE) private storage: Storage,\n        private http:HttpClient){}\n    \n    public login(user:User): Observable<User>{\n        const url: string = `${this.apiBaseUrl}/login`;\n        return this.http.post<AuthResponse>(url, user)\n                .pipe(\n                    tap( (response) => {\n                        this.storage.setItem(this.tokenName, response.token);\n                    }),\n                    switchMap((result) => {\n                        if(result.token){\n                            const token: string = result.token;\n                            const loggedUser:User = JSON.parse(atob(token.split('.')[1]));\n                            return of(loggedUser);\n                        }\n                        else{\n                            return null;\n                        }\n                        \n                    })\n                )\n    }\n    public getToken(): string {\n        return this.storage.getItem(this.tokenName);\n    }\n    \n\n    public isLoggedIn(): boolean{\n        const token: string = this.getToken();\n        if(token){\n            //Se usa atob para decodificar el token\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            return payload.exp > (Date.now()/1000);\n        }else {\n            return false;\n        }\n    }\n\n    public getCurrentUser(): User{\n        if(this.isLoggedIn()){\n            const token: string = this.getToken();\n            const {_id, email, name, profile} = JSON.parse(atob(token.split('.')[1]));\n            return {_id, email, name, profile} as User;\n        }else{\n            return null;\n        }\n    }\n\n    public register(user:User): Observable<User>{\n        const url: string = `${this.apiBaseUrl}/register`;\n        return this.http.post<AuthResponse>(url, user)\n                .pipe(\n                    tap( (response) => {\n                        this.storage.setItem(this.tokenName, response.token);\n                    }),\n                    switchMap((result) => {\n                        if(result.token){\n                            const token: string = result.token;\n                            const loggedUser:User = JSON.parse(atob(token.split('.')[1]));\n                            return of(loggedUser);\n                        }\n                        else{\n                            return null;\n                        }\n                        \n                    })\n                )\n    }\n    public logout(){\n        this.storage.removeItem(this.tokenName);\n    }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() userName$: Observable<string>;\n  @Output() signOutEvent = new EventEmitter<string>();\n  @Output() menuClick: EventEmitter<boolean> = new EventEmitter();\n  toggleValue: boolean=true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public signOut(): void {\n    console.log('Sign Out');\n    this.signOutEvent.emit('SignOut');\n    \n  }\n\n  public toggleForMenuClick(){\n    this.toggleValue = ! this.toggleValue;\n    this.menuClick.emit(this.toggleValue);\n    \n  }\n\n}\n","<mat-toolbar class=\"header\" >\n    <div class=\"header__title\">\n        <mat-icon *ngIf=\"!toggleValue\" (click)=\"toggleForMenuClick()\" class=\"menu\">menu</mat-icon>\n        <mat-icon *ngIf=\"toggleValue\" (click)=\"toggleForMenuClick()\" class=\"menu\">arrow_back</mat-icon>\n        Bienvenido {{userName$ | async}}\n    </div>\n    \n    <span class=\"central-stretchable-space\"></span>\n    <a class=\"action\" (click)=\"signOut()\">Salir</a>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable()\nexport class PasswordMatchValidationService {\n\n  patternValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\n      const valid = regex.test(control.value);\n      return valid ? null : { invalidPassword: true };\n    };\n  }\n  \n\n  MatchPassword(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n      } else {\n        confirmPasswordControl.setErrors(null);\n      }\n    }\n  }\n\n  userNameValidator(userControl: AbstractControl) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.validateUserName(userControl.value)) {\n          resolve({ userNameNotAvailable: true });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n  }\n\n  validateUserName(userName: string) {\n    const UserList = ['ankit', 'admin', 'user', 'superuser'];\n    return (UserList.indexOf(userName) > -1);\n  }\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MenuItem } from 'src/app/core/models/menuItem.model';\n\n@Component({\n  selector: 'app-form-menu-item',\n  templateUrl: './form-menu-item.component.html',\n  styleUrls: ['./form-menu-item.component.scss']\n})\nexport class FormMenuItemComponent implements OnInit {\n\n  menuItemFormGroup:FormGroup;\n  imagenMenuItem:string = \"../../../../assets/camara.png\";\n\n  \n  constructor(private fb:FormBuilder, public dialogRef: MatDialogRef<FormMenuItemComponent>) { }\n\n  @Output() onSaveMenuItem = new EventEmitter<MenuItem>();\n\n  ngOnInit(): void {\n    this.menuItemFormGroup = this.fb.group(\n      {\n        imagen:[''],\n        imagenUrl:[''],\n        titulo:['', Validators.required],\n        descripcion:[''],\n        precio:['', Validators.required]\n      }\n    )\n  }\n\n  public crear_menuItem(){\n    \n  }\n  \n  public subirFoto(event){\n    document.getElementById(\"fileInput-menuItem\").click();\n  }\n\n  public showPreviewMenuItemFoto(event){\n    const reader = new FileReader();\n    \n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n    \n      reader.onload = () => {\n   \n        this.imagenMenuItem = reader.result as string;\n     \n        this.menuItemFormGroup.patchValue({\n          imagen: file\n        });\n   \n      };\n    }\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n\n    <div class=\"mat-headline\">Nuevo Menú Item</div>\n    <app-expansion-helper></app-expansion-helper>\n\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { Local } from 'src/app/core/models/local.model';\nimport { LocalConfigurationFacade } from '../services/localConfigurationFacade.service';\n\n@Component({\n  selector: 'app-local-configuration',\n  templateUrl: './local-configuration.component.html',\n  styleUrls: ['./local-configuration.component.scss']\n})\nexport class LocalConfigurationComponent implements OnInit, OnDestroy {\n\n  local$:Observable<Local>;\n\n  subscriptionLocal$:Subscription;\n  \n  localForm: FormGroup;\n\n  message: string='';\n  showMessage:boolean = false;\n\n  constructor(private fb: FormBuilder, private localconfigurationFacade: LocalConfigurationFacade) { }\n  \n  ngOnDestroy(): void {\n    this.subscriptionLocal$.unsubscribe()\n\n  }\n\n  ngOnInit(): void {\n    this.localForm = this.fb.group({\n      _id:[''],\n      nombreDelLocal: ['', Validators.required],\n      ruc: ['', Validators.required],\n      direccionDelLocal:['', Validators.required],\n      nombreDelContacto: ['', Validators.required],\n      emailDelContacto:['', Validators.required],\n      celularDelContacto:['', Validators.required],\n      urlMenuDigital:['', Validators.required],\n      localNameUrl:['', Validators.required],\n      estatus:['']\n    });\n   \n    this.local$ = this.localconfigurationFacade.updateLocalState();\n\n    this.actualizar_campos(); \n\n    \n  }\n\n  private actualizar_campos():void{\n   \n    this.subscriptionLocal$ = this.local$.subscribe(\n      (local) =>{\n        \n          this.localForm.patchValue(local[0]);\n          this.verificarMenuDigitalUrl();\n        \n      }\n    )\n  }\n\n  public verificarMenuDigitalUrl(){\n    let value:string = this.localForm.get('urlMenuDigital').value;\n    let nombre:string = this.localForm.get('nombreDelLocal').value;\n    let localNombreUrl:string = this.localForm.get('localNameUrl').value;\n    \n    \n    \n    if(value=='' && nombre!=''){\n      let propuestaUrlMenu = this.localForm.get('nombreDelLocal').value.toLowerCase().replace(/\\s/g, '');\n      this.localconfigurationFacade.queryUrlMenu(propuestaUrlMenu).subscribe(\n        (urlMenu) => {\n          const num = urlMenu.lastIndexOf('/');\n\n          this.localForm.patchValue({\n            urlMenuDigital: urlMenu,\n            localNameUrl: urlMenu.substring(num+1)\n          })\n          \n        }\n      )\n    }\n    if(localNombreUrl == '' && value.length>0){\n      const num = value.lastIndexOf('/');\n      this.localForm.patchValue({\n        \n        localNameUrl: value.substring(num+1)\n      })\n    }\n    \n    if(this.localForm.invalid){\n      this.message =\"Por favor completa todos los campos sobre tu local Gastronómico para poder crear tu MenuDigital\";\n      this.showMessage = true;\n    }\n    \n\n    \n  }\n\n  public modificarNombre(){\n    let propuestaUrlMenu = this.localForm.get('nombreDelLocal').value.toLowerCase().replace(/\\s/g, '');\n      this.localconfigurationFacade.queryUrlMenu(propuestaUrlMenu).subscribe(\n        (urlMenu) => {\n          this.localForm.patchValue({\n            urlMenuDigital: urlMenu\n          })\n        }\n      )\n  }\n\n  \n  public onSubmit(){\n    this.localForm.patchValue(\n      {\n        estatus:1\n      }\n    )\n    console.log('Local antes de guardar:', this.localForm.value);\n    this.localconfigurationFacade.saveLocal(this.localForm.value);\n  }\n\n}\n","<app-layout>\n  <div class=\"container\">\n    <div class=\"mensaje_feedback\">\n      <p class=\"mat-subheading-2 message-full-width\" *ngIf=\"showMessage\">{{message}}</p>\n    </div>\n    <form [formGroup]=\"localForm\" (ngSubmit)=\"onSubmit()\">\n   \n    <div class=\"mat-title\">Mi Local Gastronómico</div>\n    <br>\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Nombre del local:</mat-label>\n            <input matInput readonly=\"false\" type=\"text\" (change)=\"modificarNombre()\" (focusout)=\"verificarMenuDigitalUrl()\" formControlName=\"nombreDelLocal\">\n            <mat-error *ngIf=\"localForm.controls['nombreDelLocal'].hasError('required')\">\n              Nombre del local es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n       \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>RUC:</mat-label>\n            <input  readonly=\"false\" type=\"text\" matInput  formControlName=\"ruc\">\n            <mat-error *ngIf=\"localForm.controls['ruc'].hasError('required')\">\n              RUC es <strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n       \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Dirección del local:</mat-label>\n            <input readonly=\"false\" type=\"text\" matInput formControlName=\"direccionDelLocal\">\n            <mat-error *ngIf=\"localForm.controls['direccionDelLocal'].hasError('required')\">\n              La dirección es <strong>obligatoria</strong>\n            </mat-error>\n    </mat-form-field>\n     \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Nombre del contacto:</mat-label>\n            <input  readonly=\"false\" type=\"text\" matInput formControlName=\"nombreDelContacto\">\n            <mat-error *ngIf=\"localForm.controls['nombreDelContacto'].hasError('required')\">\n              El nombre del contacto es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n       \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email del local:</mat-label>\n            <input  readonly=\"false\" type=\"email\" matInput formControlName=\"emailDelContacto\">\n            <mat-error *ngIf=\"localForm.controls['emailDelContacto'].hasError('required')\">\n              El email del contacto es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n    \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Celular del contacto:</mat-label>\n            <input  readonly=\"false\" type=\"text\" matInput formControlName=\"celularDelContacto\">\n            <mat-error *ngIf=\"localForm.controls['celularDelContacto'].hasError('required')\">\n              El número de celular del contacto es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n        \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Dirección web de tu MenuDigital:</mat-label>\n            <input  readonly=\"true\" type=\"text\" matInput formControlName=\"urlMenuDigital\">\n            \n    </mat-form-field>\n    <div>\n      <button mat-raised-button disabled=\"{{!localForm.valid}}\" class=\"boton_guardar\" type=\"submit\">Guardar</button>\n    </div>\n  </form>\n</div>\n\n</app-layout>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { httpInterceptorProviders } from './interceptors';\nimport { AuthenticationService } from './http/authentication.service';\nimport { UserStateService } from './state/user-state.service';\nimport { LocalStateService } from './state/local-state.service';\nimport { LocalConfigurationService } from './http/localConfiguration.service';\nimport { MenuItemsStateService } from './state/menuItems-state.service';\nimport { MenuConfigurationService } from './http/menuConfiguracion.service';\nimport { PublicMenuService } from './http/publicMenu.service';\nimport { SeccionesStateService } from './state/secciones-state.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    httpInterceptorProviders,\n    AuthenticationService,\n    LocalConfigurationService,\n    UserStateService,\n    LocalStateService,\n    SeccionesStateService,\n    MenuItemsStateService,\n    MenuConfigurationService,\n    PublicMenuService\n    \n    \n    \n    \n  ]\n})\nexport class CoreModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SeccionMenu } from 'src/app/core/models/seccion-menu.model';\n\n@Component({\n  selector: 'app-form-seccion',\n  templateUrl: './form-seccion.component.html',\n  styleUrls: ['./form-seccion.component.scss']\n})\nexport class FormSeccionComponent implements OnInit {\n\n  seccionFormGroup:FormGroup;\n  @Output() onSaveSeccion = new EventEmitter<SeccionMenu>();\n  constructor(private fb:FormBuilder, public dialogRef: MatDialogRef<FormSeccionComponent>) { }\n\n  ngOnInit(): void {\n    this.seccionFormGroup = this.fb.group({\n      titulo:['', Validators.required],\n      descripcion:[''],\n      puesto:['', Validators.required]\n    });\n  }\n\n  public crear_seccion(){\n    this.onSaveSeccion.emit(this.seccionFormGroup.value);\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<form [formGroup]=\"seccionFormGroup\" (ngSubmit)=\"crear_seccion()\">\n    <div class=\"mat-headline\">Nueva Sección</div>\n\n    <mat-form-field class=\"full_width\" appearance=\"outline\">\n        <mat-label>Titulo de la sección</mat-label>\n        <input matInput formControlName=\"titulo\" placeholder=\"Titulo\">\n    </mat-form-field>\n    <mat-form-field class=\"full_width\" appearance=\"outline\">\n        <mat-label>Descripción de la sección</mat-label>\n        <textarea  matInput formControlName=\"descripcion\" placeholder=\"Descripción\"></textarea>\n    </mat-form-field>\n    <mat-form-field class=\"full_width\" appearance=\"outline\">\n        <mat-label>Posición en el Menú</mat-label>\n        <input matInput formControlName=\"puesto\" placeholder=\"Puesto\">\n        <!--mat-hint align=\"start\">En qué posición estará esta sección</mat-hint-->\n    </mat-form-field>\n    <button class=\"boton_guardar\" mat-raised-button  type=\"submit\">Crear</button>\n</form>\n","<mat-nav-list *ngFor=\"let sidenavLink of sidebarLinks$ | async\">\n    <mat-list-item routerLink=\"{{sidenavLink.routeLink}}\" routerLinkActive=\"active\">\n      <mat-icon>{{sidenavLink.icon}}</mat-icon> {{sidenavLink.label}}\n    </mat-list-item>\n\n    \n    \n</mat-nav-list>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SidebarLink } from 'src/app/core/models/sidebar.model';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  @Input() sidebarLinks$: Observable<SidebarLink[]>;\n  //@Input() sidebarLinks: SidebarLink[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'guaraniCurrency'\n})\nexport class GuaraniCurrencyPipe implements PipeTransform {\n\n  transform(val: number): string {\n    // Format the output to display any way you want here.\n    // For instance:\n    if (val !== undefined && val !== null) {\n      return val.toLocaleString('es-PY', { style: 'currency', currency: 'PYG' });\n    } else {\n      return '';\n    }\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { SeccionMenu } from \"../models/seccion-menu.model\";\n\n@Injectable()\nexport class SeccionesStateService{\n    private _secciones: BehaviorSubject<SeccionMenu[]> = new BehaviorSubject<SeccionMenu[]>(null);\n\n    public readonly secciones$:Observable<SeccionMenu[]> = this._secciones.asObservable();\n\n    constructor(){}\n\n    public setSecciones(secciones:SeccionMenu[]){\n        console.log('SeccionesState:', secciones);\n        this._secciones.next(secciones);\n        \n    }\n\n    public addSeccion(seccion:SeccionMenu){\n        const secciones = this._secciones.getValue();\n        secciones.push(seccion);\n        this._secciones.next(secciones);\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport {AuthPageComponent} from './authentication/container/auth-page/auth-page.component';\n\nconst routes:Routes = [\n  {\n    path: 'login',\n    component: AuthPageComponent\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'configuracion',\n    loadChildren: () => import('./configuration/configuration.module').then(m => m.ConfigurationModule)\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n  },\n  {\n    path: 'menudigital/:nombrelocal',\n    loadChildren: () => import('./public-menu/public-menu.module').then(m => m.PublicMenuModule)\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {InjectionToken} from '@angular/core';\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n   providedIn: 'root',\n   factory: () => localStorage \n});\n\nexport const TOKEN_NAME = new InjectionToken<String>('Token Name', {\n    providedIn: 'root',\n    factory: () => {return 'menuDigital-token'} \n });\n\n export const API_URL = new InjectionToken<String>('ApiUrl', {\n   providedIn: 'root',\n   factory: () => {return 'http://localhost:3000/api'} \n});\n\n","import { NgModule } from '@angular/core';\n\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\nimport { LocalConfigurationComponent } from './local-configuration/local-configuration.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { LocalConfigurationFacade } from './services/localConfigurationFacade.service';\nimport { MenuListComponent } from './menu-configuration/container/menu-list.component';\nimport { MenuListFacade } from './services/menuListFacade.service';\nimport { FormSeccionComponent } from './menu-configuration/components/form-seccion/form-seccion.component';\nimport { FormMenuItemComponent } from './menu-configuration/components/form-menu-item/form-menu-item.component';\n\n\n@NgModule({\n  declarations: [LocalConfigurationComponent, MenuListComponent, FormSeccionComponent, FormMenuItemComponent],\n  imports: [\n    ConfigurationRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    LocalConfigurationFacade,\n    MenuListFacade\n  ]\n})\nexport class ConfigurationModule { }\n","import { state } from \"@angular/animations\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { SidebarLink } from \"../models/sidebar.model\";\nimport { User } from \"../models/user.model\";\n\n@Injectable()\nexport class UserStateService{\n    private _user: BehaviorSubject<User> = new BehaviorSubject<User>(null);\n\n    public readonly user$:Observable<User> = this._user.asObservable();\n\n    private _sidenavLinks: BehaviorSubject<SidebarLink[]> = new BehaviorSubject<SidebarLink[]>(null);\n\n    public readonly sidenavLinks$:Observable<SidebarLink[]> = this._sidenavLinks.asObservable();\n\n    constructor(){}\n\n    public setUser(userParam:User){\n        \n        this._user.next(userParam);\n        if(userParam.role){\n            this.setUserNavLinksByProfile(userParam.role);\n            \n        }\n    }\n\n    public setUserNavLinksByProfile(profile:string):void{\n        switch(profile){\n            case('user'):\n                this._sidenavLinks.next(this.getUserNavLinks());\n                break;\n            default:\n                this._sidenavLinks.next(this.getUserNavLinks());\n                break;\n\n        }\n\n    }\n\n    private getUserNavLinks():SidebarLink[]\n    {\n        \n        return[\n            {\n              label: 'Reportes',\n              icon: 'analytics',\n              routeLink: '/dashboard'\n            },\n            {\n              label: 'Mi Local',\n              icon: 'restaurant',\n              routeLink: '/configuracion/local'\n            },\n            {\n              label: 'Mi Menu Digital',\n              icon: 'menu_book',\n              routeLink: '/configuracion/menu'\n            },\n            {\n              label: 'Pedidos',\n              icon: 'topic',\n              routeLink: '/pedidos'\n            }\n      \n      \n          ];\n    }\n    \n}","import { Component, Inject, Input, OnInit, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EventEmitter } from 'events';\n\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss']\n})\nexport class AlertDialogComponent implements OnInit {\n  titulo:string;\n  constructor(public dialogRef: MatDialogRef<AlertDialogComponent>, @Inject(MAT_DIALOG_DATA) public data:{titulo: string}) { \n    this.titulo = data.titulo;\n   }\n\n  ngOnInit(): void {\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<h2 mat-dialog-title>{{titulo}}</h2>\n\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"false\">No</button>\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n  <button mat-button [mat-dialog-close]=\"true\">Si</button>\n</mat-dialog-actions>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}