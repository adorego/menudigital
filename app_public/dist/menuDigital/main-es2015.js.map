{"version":3,"sources":["./src/app/shared/layout/layout.component.ts","./src/app/shared/layout/layout.component.html","./src/app/configuration/services/menuListFacade.service.ts","./src/app/core/state/menuItems-state.service.ts","./src/app/core/http/publicMenu.service.ts","./src/app/authentication/components/register/register.component.ts","./src/app/authentication/components/register/register.component.html","./src/app/authentication/container/auth-page/auth-page.component.ts","./src/app/authentication/container/auth-page/auth-page.component.html","./src/app/configuration/configuration-routing.module.ts","./src/app/core/interceptors/index.ts","./src/app/shared/expansion-helper/expansion-helper.component.ts","./src/app/shared/expansion-helper/expansion-helper.component.html","./src/app/configuration/services/localConfigurationFacade.service.ts","./src/environments/environment.ts","./src/app/authentication/components/login/login.component.ts","./src/app/authentication/components/login/login.component.html","./src/app/configuration/menu-configuration/container/menu-list.component.ts","./src/app/configuration/menu-configuration/container/menu-list.component.html","./src/app/authentication/services/authFacade.service.ts","./src/app/core/state/local-state.service.ts","./src/app/core/http/localConfiguration.service.ts","./src/app/shared/header/components/user-menu/user-menu.component.ts","./src/app/shared/header/components/user-menu/user-menu.component.html","./src/app/authentication/authentication.module.ts","./src/app/shared/shared.module.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/interceptors/httpErrorHandler.interceptor.ts","./src/app/core/http/menuConfiguracion.service.ts","./src/app/app.module.ts","./src/app/core/http/authentication.service.ts","./src/app/shared/header/container/header.component.ts","./src/app/shared/header/container/header.component.html","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/services/passwordMatchValidation.service.ts","./src/app/configuration/menu-configuration/components/form-menu-item/form-menu-item.component.ts","./src/app/configuration/menu-configuration/components/form-menu-item/form-menu-item.component.html","./src/app/configuration/local-configuration/local-configuration.component.ts","./src/app/configuration/local-configuration/local-configuration.component.html","./src/app/core/core.module.ts","./src/app/configuration/menu-configuration/components/form-seccion/form-seccion.component.ts","./src/app/configuration/menu-configuration/components/form-seccion/form-seccion.component.html","./src/app/shared/sidebar/sidebar.component.html","./src/app/shared/sidebar/sidebar.component.ts","./src/app/shared/pipes/guarani-currency.pipe.ts","./src/app/core/state/secciones-state.service.ts","./src/app/app-routing.module.ts","./src/app/core/state/storage.ts","./src/app/configuration/configuration.module.ts","./src/app/core/state/user-state.service.ts","./src/app/shared/alert-dialog/alert-dialog.component.ts","./src/app/shared/alert-dialog/alert-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Observable, of } from 'rxjs';\nimport { AuthFacade } from 'src/app/authentication/services/authFacade.service';\nimport { SidebarLink } from 'src/app/core/models/sidebar.model';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { map, shareReplay, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  navList$:Observable<SidebarLink[]>;\n  \n  @ViewChild(\"sideNav\") sideNav: MatSidenav;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => \n        result.matches),\n        tap((result) => {console.log('Matches', result);}),\n      shareReplay()\n    );\n  \n  constructor(private authFacade:AuthFacade, private breakpointObserver: BreakpointObserver) { \n    this.navList$ = this.authFacade.getUserSideBarNav();\n    \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  public getUserName():Observable<string>{\n    return this.authFacade.getUserState()\n      .pipe(\n        map(\n          (user) =>{\n            if(user!=null){\n              let userName:string[] = user.name.split(\" \", 1);\n              return userName[0];\n            }else{\n              return null;\n            }\n          }\n        )\n      )\n    \n    \n    \n  }\n  public signOut(){\n    this.authFacade.logOut();\n  }\n\n  toggleSideNav(event){\n    event? this.sideNav.open() : this.sideNav.close();\n  }\n\n\n  getDummyNavList():Observable<SidebarLink[]>{\n        return of([\n          {\n            label: 'Reportes',\n            icon: 'analytics',\n            routeLink: '/dashboard'\n          },\n          {\n            label: 'Mi Local',\n            icon: 'build',\n            routeLink: '/configuracion/local'\n          },\n          {\n              label: 'Mi Local',\n              icon: 'build',\n              routeLink: '/configuracion/local'\n          },\n          {\n              label: 'Pedidos',\n              icon: 'topic',\n              routeLink: '/pedidos'\n          }\n      ]);\n  }\n}\n","<app-header [userName$]=\"getUserName()\" (signOutEvent)=\"signOut()\" (menuClick)=\"toggleSideNav($event)\"></app-header>\n<mat-sidenav-container  class=\"layout\">\n    <mat-sidenav\n        #sideNav\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n        [opened]=\"(isHandset$ | async) === false\"\n        >\n        <app-sidebar [sidebarLinks$]=\"navList$\"></app-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"layout-content\">\n        <ng-content></ng-content>\n    </mat-sidenav-content>\n\n\n\n\n\n</mat-sidenav-container>","import { Injectable } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { empty, Observable, of, throwError } from \"rxjs\";\nimport { map, mergeMap, switchMap, tap } from \"rxjs/operators\";\nimport { MenuConfigurationService } from \"src/app/core/http/menuConfiguracion.service\";\nimport { MenuItem } from \"src/app/core/models/menuItem.model\";\nimport { SeccionMenu } from \"src/app/core/models/seccion-menu.model\";\nimport { SeccionesStateService } from \"src/app/core/state/secciones-state.service\";\nimport { LocalConfigurationFacade } from \"./localConfigurationFacade.service\";\n\n\n@Injectable()\nexport class MenuListFacade{\n\n    constructor(\n        private menuConfigurationService: MenuConfigurationService,\n        private seccionesStateService:SeccionesStateService, \n        private localConfigurationFacade:LocalConfigurationFacade,\n        private toastr: ToastrService)\n        {}\n\n    public createSeccion(nuevaSeccionMenu:SeccionMenu):void{\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    if(local instanceof Array)\n                        return this.menuConfigurationService.createSeccion(local[0]._id, nuevaSeccionMenu);\n                    else\n                    return this.menuConfigurationService.createSeccion(local._id, nuevaSeccionMenu);\n                }\n            ),\n            tap(\n                (seccion) => {\n                    if(seccion){\n                        this.toastr.success('Seccion creada correctamente', 'Mensaje');\n                        this.seccionesStateService.addSeccion(seccion);\n                        \n                    }else{\n                        this.toastr.error('Error al crear la Sección', 'Mensaje');\n                    }\n                }\n            )\n        )\n        .subscribe(\n            (nuevaSeccion) => {\n                console.log('Nueva Seccion creada:', nuevaSeccion);\n            }\n        )\n                \n        \n    \n        \n        \n    }\n\n    public deleteSeccion(toDeleteSeccion:SeccionMenu):void{\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    return this.menuConfigurationService.deleteSeccion(local[0]._id, toDeleteSeccion._id)\n                }\n            )\n        )\n        .subscribe(\n            () => {\n                this.toastr.success('Sección eliminada correctamente', 'Mensaje')\n                this.updateSeccionState();\n            }\n        )\n    }\n\n    public updateSeccionState():void{\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) =>{\n                    //console.log('Local._id:', local[0]._id);\n                    if(local instanceof Array)\n                        return this.menuConfigurationService.getSecciones(local[0]._id)\n                    else if(local instanceof Object)\n                        return this.menuConfigurationService.getSecciones(local._id)\n                    else\n                        return of([])\n                }\n            ),\n            tap(\n                (secciones) =>{\n                    console.log('Secciones:', secciones);\n                    this.seccionesStateService.setSecciones(secciones);\n                }\n            )\n        )\n        .subscribe(\n            (secciones) => console.log('Subscripcion en updateSeccionState:', secciones)\n        )\n           \n        \n    }\n\n    public seccionesState():Observable<SeccionMenu[]>{\n        return this.seccionesStateService.secciones$;\n    }\n\n\n\n    //Gestión de los MenuItems\n\n    public createItemMenu(newItemMenu:MenuItem):Observable<MenuItem>{\n        \n        return this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    if(local instanceof Array)\n                        return this.menuConfigurationService.createItemMenu(local[0]._id, newItemMenu)\n                    else\n                        return this.menuConfigurationService.createItemMenu(local._id, newItemMenu)\n                    .pipe(\n                        tap(\n                            (menuItem) => {\n                                if(menuItem){\n                                    this.toastr.success('MenuItem creado correctamente', 'Mensaje');\n                                    this.updateSeccionState();\n                                }else{\n                                    this.toastr.error('Error al crear el MenuItem', 'Mensaje');\n                                }\n                            }\n                        )\n                    )\n                }\n            )\n            \n        )\n        \n       \n\n        \n\n    }\n\n    public deleteItemMenu(todeleteMenuItem:MenuItem):void{\n        console.log('MenuItem a eliminar:', todeleteMenuItem);\n        this.localConfigurationFacade.updateLocalState()\n        .pipe(\n            switchMap(\n                (local) => {\n                    return this.menuConfigurationService.deleteItemMenu(local[0]._id, todeleteMenuItem)\n                }\n            )\n        )\n        .subscribe(\n            () => {\n                this.toastr.success('MenuItem eliminado correctamente', 'Mensaje')\n                this.updateSeccionState();\n            }\n        )\n    }\n    \n    \n    \n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { MenuItem } from \"../models/menuItem.model\";\n\n@Injectable()\nexport class MenuItemsStateService{\n    private _menuItems: BehaviorSubject<MenuItem[]> = new BehaviorSubject<MenuItem[]>(null);\n\n    public readonly menuItems$:Observable<MenuItem[]> = this._menuItems.asObservable();\n\n    constructor(){}\n\n    public setLocal(menuItems:MenuItem[]){\n        \n        this._menuItems.next(menuItems);\n        \n    }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { API_URL } from \"../state/storage\";\n\n\n\n@Injectable()\nexport class PublicMenuService {\n\n    constructor(@Inject(API_URL) private apiUrl: string, private http:HttpClient){}\n\n    public getMenu(nameUrl:string):Observable<Local>{\n        const url:string = `${this.apiUrl}/menudigital/${nameUrl}`;\n        return this.http.get<Local>(url);\n    }\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PasswordMatchValidationService } from '../../services/passwordMatchValidation.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() sendSignForm = new EventEmitter<any>();\n  form:FormGroup;\n\n  constructor(private passwordMatchValidationService: PasswordMatchValidationService, public dialogRef: MatDialogRef<RegisterComponent> ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      repassword: new FormControl('', [Validators.required])\n    },\n    {\n      validators: this.passwordMatchValidationService.MatchPassword('password', 'repassword')\n    });\n  }\n\n  public sign(): void {\n    if (this.form.valid) {\n      this.sendSignForm.emit(this.form.value);\n      this.dialogRef.close();\n    }\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<form class=\"form\" [formGroup]=\"form\" (ngSubmit)=\"sign()\">\n  <h4 class=\"header_login\">Registrate!</h4>\n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Nombre Completo</mat-label>\n      <input type=\"text\" autocomplete=\"off\" matInput placeholder=\"Nombre completo\" formControlName=\"name\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Correo</mat-label>\n      <input matInput placeholder=\"Dirección de correo\" type=\"email\" autocomplete=\"off\" formControlName=\"email\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Clave</mat-label>\n      <input matInput placeholder=\"Clave de acceso\" type=\"password\" autocomplete=\"off\" formControlName=\"password\">\n    </mat-form-field>\n\n    <mat-form-field class=\"input_field\" appearance=\"outline\">\n      <mat-label>Repetir la clave</mat-label>\n      <input matInput placeholder=\"Repite tu clave de acceso\" type=\"password\" autocomplete=\"off\" formControlName=\"repassword\">\n    </mat-form-field>\n  \n    <div class=\"form-actions\">\n      <button class=\"boton_crear\" mat-raised-button  type=\"submit\">Crea tu cuenta</button>\n    </div>\n</form>\n  \n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\nimport { LoginComponent } from '../../components/login/login.component';\nimport { RegisterComponent } from '../../components/register/register.component';\nimport { AuthFacade } from '../../services/authFacade.service';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.scss']\n})\nexport class AuthPageComponent implements OnInit, OnDestroy {\n\n    subscriptionLoginDialog:Subscription;\n    subscriptionRegisterDialog:Subscription;\n    dialogRegisterRef:MatDialogRef<RegisterComponent>;\n    dialogLoginRef:MatDialogRef<LoginComponent>;\n    userState$:Observable<User>;\n    userStateSubscription:Subscription;\n    constructor(public dialog: MatDialog, private authFacade: AuthFacade) { }\n    \n\n    public registrarme(){\n        this.dialogRegisterRef = this.dialog.open(RegisterComponent, this.createMatDialogConfig());\n        this.subscriptionRegisterDialog = this.dialogRegisterRef.componentInstance.sendSignForm.subscribe(\n          (formData:any) => {\n            //console.log('Datos del login:', formData);\n            this.authFacade.register(formData);\n\n            \n          }\n        );\n        \n      \n      }\n\n    public login(){\n        //console.log('AuthPage Login');\n        \n        this.dialogLoginRef = this.dialog.open(LoginComponent, this.createMatDialogConfig());\n        this.subscriptionLoginDialog = this.dialogLoginRef.componentInstance.sendLoginForm.subscribe(\n          (formData:any) => {\n            //console.log('Datos del login:', formData);\n            this.authFacade.login(formData);\n\n            \n          }\n        );\n        \n      }\n\n    private createMatDialogConfig():MatDialogConfig{\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.position ={\n          'top': '20px',\n          'left': '10px'\n        };\n        dialogConfig.width = '50%';\n        dialogConfig.height = '80vh';\n        dialogConfig.minWidth = '300px';\n        dialogConfig.minHeight = '300px';\n        dialogConfig.panelClass = \"my-dialog\";\n        return dialogConfig;\n      }\n\n      \n  \n  \n\n    ngOnInit(): void {\n        this.userState$ = this.authFacade.getUserState();\n        this.userStateSubscription = this.userState$.subscribe(\n          (user) => {\n            if(user){\n              if(this.dialogLoginRef){\n                this.dialogLoginRef.close();\n              }\n              if(this.dialogRegisterRef){\n                this.dialogRegisterRef.close();\n              }\n            }\n          }\n        )\n      }\n\n    ngOnDestroy(): void {\n        if (this.userStateSubscription)\n          this.userStateSubscription.unsubscribe();\n        if(this.subscriptionLoginDialog)\n          this.subscriptionLoginDialog.unsubscribe();\n        if(this.subscriptionRegisterDialog)\n          this.subscriptionRegisterDialog.unsubscribe();\n      }\n}\n","<div class=\"page\">\n    <div class=\"container\"> \n        <mat-toolbar>\n            <mat-toolbar-row fxLayout=\"row\" class=\"toolbar_container\" fxLayoutAlign=\"start end\" fxLayoutAlign.lt-md=\"space-between end\">\n                <button mat-icon-button [matMenuTriggerFor]=\"dropMenu\" fxHide fxShow.lt-md>\n                    <mat-icon>menu</mat-icon>\n                </button>\n                <mat-menu #dropMenu=\"matMenu\">\n                    <button mat-menu-item>\n                        Cómo funciona?\n                    </button>\n                    <button mat-menu-item>\n                        Cuánto cuesta?\n                    </button>\n                    <button mat-menu-item>\n                        Nosotros\n                    </button>\n                </mat-menu>\n                \n                <div fxFlex=\"1 1 auto\" class=\"logo_container\" fxHide.lt-md>\n                    <img  class=\"logo_img\" src=\"../../../../assets/imagenes/logo.png\">\n                </div>\n                \n                <div fxFlex=\"1 2 auto\" class=\"links_headers1\" fxHide.lt-md>\n                    <a mat-button href=\"\" target=\"_self\">Cómo funciona?</a> \n                    <a mat-button href=\"\" target=\"_self\">Cuánto cuesta?</a>\n                    <a mat-button href=\"\" target=\"_self\">Nosotros</a> \n                </div>\n                <div fxFlex=\"1 1 auto\" fxFlex.lt-md=\"2 1 100\" class=\"links_headers2\" ngClass.lt-md=\"links_headers2_md\">\n                    <a mat-button   (click)=\"registrarme()\">Registrarme</a> \n                    <a mat-button   (click)=\"login()\">Ingresar</a>\n                </div>\n                \n            </mat-toolbar-row>\n            <mat-toolbar-row fxHide fxShow.lt-md>\n                <img  class=\"logo_img_md\" src=\"../../../../assets/imagenes/logo.png\">\n            </mat-toolbar-row>\n        </mat-toolbar>\n        <div contenido>\n            <div fxLayout=row>\n                <h1 fxFlex=\"90\" class=\"header_h1 mat-display-3\">Tenés un local Gastronómico ?</h1>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxFlexFill fxLayoutAlign=\"start stretch\">\n                <div fxFlex=\"50\">\n                    <div fxLayout=\"column\" fxLayouAlign=\"space-between end\">\n                        <div fxFlex class=\"propuesta1 mat-display-1\">\n                            Con MenúDigital incrementás tus ventas mejorando la experiencia de compra de tu cliente digital\n                        </div>\n                        <div fxFlex class=\"propuesta2 mat-display-1\">\n                            MenúDigital te permite crear tu Menú en dos simples pasos...<a class=\"como_funciona_link\" href=\"#como_funciona\">Ver como funciona</a>\n                        </div>\n                    </div>\n                </div>\n                <div fxFlex=\"50\" fxLayoutAlign=\"center center\" class=\"cta_button_container\">\n                    <button class=\"cta_button\" mat-raised-button>Crea tu cuenta hoy</button>\n                </div>\n            </div>\n            \n        </div>\n    </div>    \n</div>\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalConfigurationComponent } from './local-configuration/local-configuration.component';\nimport { MenuListComponent } from './menu-configuration/container/menu-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocalConfigurationComponent\n  },\n  {\n    path: 'local',\n    component: LocalConfigurationComponent\n  },\n  {\n    path: 'menu',\n    component: MenuListComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigurationRoutingModule { }\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {HttpErrorHandlerInterceptor} from './httpErrorHandler.interceptor';\n\nexport const httpInterceptorProviders = [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpErrorHandlerInterceptor, multi: true}\n]","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ExpansionArrayModel } from 'src/app/core/models/expansion-helper-array.model';\n\n@Component({\n  selector: 'app-expansion-helper',\n  templateUrl: './expansion-helper.component.html',\n  styleUrls: ['./expansion-helper.component.scss']\n})\nexport class ExpansionHelperComponent implements OnInit {\n  @Input() expansionArrayModel:ExpansionArrayModel;\n  formGroupTamanos:FormGroup[];\n  constructor(private fb:FormBuilder) { }\n\n  ngOnInit(): void {\n    if(this.expansionArrayModel && this.expansionArrayModel.tipo==1){//ExpansionPanel del tipo Tamano\n      if(this.expansionArrayModel.arrayTamano.length>0){\n        for(let tamano of this.expansionArrayModel.arrayTamano){\n          let formGroupTamano:FormGroup = this.fb.group({\n            titulo:[tamano.titulo, Validators.required],\n            descripcion:[tamano.descripcion],\n            precio:['', Validators.required],\n            imagen:[''],\n            imagenUrl:[''],\n            propiedades: this.fb.group({\n              cantComensales:[''],\n              cantPorciones:[''],\n              pesoEnGr:['']\n            })\n\n          })\n        }\n      }\n    }\n  }\n\n}\n","<mat-accordion *ngIf=\"expansionArrayModel.conDatos\">\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{expansionArrayModel.titulo}}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-expansion-panel *ngFor=\"let tamano of expansionArrayModel.arrayTamano;index as i\" matExpansionPanelContent>\n            <mat-expansion-panel-header>\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox>{{tamano.titulo}}</mat-checkbox>\n                </div>\n            </mat-expansion-panel-header>\n            <div class=\"panel_container\">\n                <form [formGroup]=\"formGroupTamanos[i]\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Titulo</mat-label>\n                        <input matInput formControlName=\"titulo\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Descripcion</mat-label>\n                        <input matInput formControlName=\"descripcion\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Precio</mat-label>\n                        <input matInput formControlName=\"precio\">\n                    </mat-form-field>\n                    <div class=\"imagen_form\">\n                        <button *ngIf=\"!formGroupTamanos[i].get('imagenUrl').value\" mat-flat-button>Selecciona</button>\n                        <img *ngIf=\"formGroupTamanos[i].get('imagenUrl').value.length > 1\" src=\"{{formGroupTamanos[i].get('imagenUrl').value}}\">\n                    </div>\n                </form>\n            </div>\n        </mat-expansion-panel>\n    </mat-expansion-panel>\n\n</mat-accordion>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport {merge, Observable, of } from \"rxjs\";\nimport { concatMap, isEmpty, map, mergeMap, switchMap, tap } from \"rxjs/operators\";\nimport { AuthenticationService } from \"src/app/core/http/authentication.service\";\nimport { LocalConfigurationService } from \"src/app/core/http/localConfiguration.service\";\nimport { Local } from \"src/app/core/models/local.model\";\nimport { LocalStateService } from \"src/app/core/state/local-state.service\";\n\n@Injectable()\nexport class LocalConfigurationFacade{\n\n    baseUrlMenu:string = 'https://menudigital.com/';\n\n    constructor(\n        private localconfigurationService:LocalConfigurationService, \n        private authenticationService:AuthenticationService,\n        private localState:LocalStateService,\n        private router:Router,\n        private toastr: ToastrService){}\n    \n    \n\n    public updateLocalState():Observable<Local>{\n        return this.localState.local$\n            .pipe(\n                switchMap((local) =>{\n                    if(local==null && this.authenticationService.getCurrentUser() && this.authenticationService.getCurrentUser()._id){\n                        return this.localconfigurationService.getLocalByUserId(this.authenticationService.getCurrentUser()._id);\n                    }else{\n                        \n                        return of(local);\n                    }\n                })\n            )\n    }\n    public saveLocal(local:Local){\n        //console.log('Local recibido:', local);\n        let subs:Observable<Local> = null;\n        if(local._id){\n            //Update\n            subs = this.localconfigurationService.updateLocal(local)\n            .pipe(\n                tap(\n                    (local) => {\n                        if(local){\n                            this.localState.setLocal(local);\n                            this.toastr.success('Guardado con exito!', 'Mensaje')\n                        }else{\n                            this.toastr.error('Error al actualizar el local', 'Mensaje');\n                        }\n                    }\n                )\n            )\n        }else{\n            //New\n            subs = this.localconfigurationService.createLocal(local)\n            .pipe(\n                tap(\n                    (local) => {\n                        if(local){\n                            this.localState.setLocal(local);\n                            this.toastr.success('Local guardado con éxito!', 'Mensaje')\n                        }else{\n                            this.toastr.error('Error al crear el local', 'Mensaje');\n                        }\n                    }\n                )\n            )\n        }\n        //Subscribirse al Observable\n        subs.subscribe(\n            (local) => {\n                console.log('Local guardado/actualizado', local);\n                if(local.estatus==1){\n                    this.router.navigateByUrl('configuracion/menu');\n                }\n            }\n        )\n    }\n    \n    public getLocalState():Observable<Local>{\n        return this.localState.local$;\n    }\n\n    public queryUrlMenu(urlmenu:string):Observable<string>{\n        let propuestaUrlMenu = urlmenu;\n        return this.localconfigurationService.queryUrlMenu(urlmenu)\n                .pipe(\n                    switchMap(\n                        (locales) => {\n                            if(!locales || !locales.length){\n\n                                return of(this.baseUrlMenu+propuestaUrlMenu);\n                            }else{\n                                return of(this.baseUrlMenu+propuestaUrlMenu+'&');\n                            }\n                        }\n                    )\n                )\n        \n        \n        \n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'login-app',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  @Output() sendLoginForm = new EventEmitter<any>();\n  form: FormGroup;\n  \n\n  constructor(private readonly formBuilder:FormBuilder, public dialogRef: MatDialogRef<LoginComponent>) {\n    this.form = this.formBuilder.group(\n      {\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required])\n      });\n   }\n\n  ngOnInit(): void {\n  }\n\n  \n  //Cerrar dialogo de Nuevo MenuItem\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n  public login(): void {\n    //console.log('LoginComponent.login()');\n    \n    if (this.form.valid) {\n      this.sendLoginForm.emit(this.form.value);\n      \n    }\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<div class=\"mat-title\">Ingresa a tu MenúDigital</div>\n<div mat-dialog-content>\n  <form [formGroup]=\"form\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n        <!--h4 class=\"header_login\">Ingresa a tu MenuDigital</h4-->\n        <mat-form-field class=\"input_field\" appearance=\"outline\">\n            <mat-label>Correo</mat-label>\n            <input id=\"correo\" matInput placeholder=\"Correo electrónico\" type=\"email\" autocomplete=\"off\" formControlName=\"email\">\n          </mat-form-field>\n        \n          <mat-form-field class=\"input_field\" appearance=\"outline\">\n            <mat-label>Clave</mat-label>\n            <input matInput placeholder=\"Clave\" type=\"password\" autocomplete=\"off\" formControlName=\"password\">\n          </mat-form-field>\n        \n          <div fxLayout=\"column\" fxLayoutGap=\"3vh\" class=\"form-actions\">\n            <button class=\"boton_ingresar\" mat-raised-button  type=\"submit\">Ingresar</button>\n            <a class=\"enlace_olvide_clave\" >Olvide mi clave</a>\n            \n          </div>\n        \n    </form>\n  </div>\n  \n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Subscription } from 'rxjs';\nimport { MenuItem } from 'src/app/core/models/menuItem.model';\nimport { SeccionMenu } from 'src/app/core/models/seccion-menu.model';\nimport { AlertDialogComponent } from 'src/app/shared/alert-dialog/alert-dialog.component';\nimport { MenuListFacade } from '../../services/menuListFacade.service';\nimport { FormMenuItemComponent } from '../components/form-menu-item/form-menu-item.component';\nimport { FormSeccionComponent } from '../components/form-seccion/form-seccion.component';\n\n@Component({\n  selector: 'app-menu-list',\n  templateUrl: './menu-list.component.html',\n  styleUrls: ['./menu-list.component.scss']\n})\nexport class MenuListComponent implements OnInit, OnDestroy {\n  \n  secciones$:Observable<SeccionMenu[]>;\n  seccionSubscription:Subscription;\n  menuItemSubscription:Subscription;\n\n  constructor(public dialog: MatDialog,private fb: FormBuilder, private menuListFacade: MenuListFacade) \n  {\n\n\n  }\n  \n  ngOnDestroy(): void {\n    if(this.menuItemSubscription)\n      this.menuItemSubscription.unsubscribe();\n    if(this.seccionSubscription)\n      this.seccionSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.secciones$ = this.menuListFacade.seccionesState();\n    this.menuListFacade.updateSeccionState();\n    \n  }\n\n  public nueva_seccion(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.position ={\n      'top': '20px',\n      'left': '10px'\n    };\n    dialogConfig.width = '50%';\n    dialogConfig.height = '80vh';\n    dialogConfig.minWidth = '300px';\n    dialogConfig.minHeight = '300px';\n    dialogConfig.panelClass = \"my-dialog\";\n    const dialogRef = this.dialog.open(FormSeccionComponent, dialogConfig);   \n    this.seccionSubscription = dialogRef.componentInstance.onSaveSeccion.subscribe(\n      (seccionMenu) => {\n        this.menuListFacade.createSeccion(seccionMenu);\n      }\n    )\n\n    \n  }\n\n  nuevo_item(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.position ={\n      'top': '20px',\n      'left': '10px'\n    };\n    dialogConfig.width = '50%';\n    dialogConfig.height = '100vh';\n    dialogConfig.minWidth = '320px';\n    dialogConfig.minHeight = '100vh';\n    dialogConfig.panelClass = \"my-dialog\";\n    const dialogRef = this.dialog.open(FormMenuItemComponent, dialogConfig);   \n    this.menuItemSubscription = dialogRef.componentInstance.onSaveMenuItem.subscribe(\n      (menuItem) => {\n        //Enviar el nuevo MenuItem a la BD\n      }\n    )\n  }\n\n  \n}\n","<app-layout>\n    <div class=\"mat-headline\">Mi MenúDigital</div>\n    <div class=\"mat-subheading-2 heading_icon\">\n        <a (click)=\"nueva_seccion()\">\n            <mat-icon class=\"material-icons\" aria-hidden=\"false\" aria-label=\"Icono de add\">add_circle_outline</mat-icon>\n        \n            Nueva Sección del Menú\n        </a>\n    </div>\n    <div class=\"secciones_del_menu\">\n        <mat-accordion *ngIf=\"secciones$|async as secciones else sinSecciones\">\n            <mat-expansion-panel *ngFor=\"let seccion of secciones\" (opened)=\"true\">\n                <mat-expansion-panel-header>\n                        <mat-panel-title class=\"mat-h4\">\n                            {{seccion.titulo}}\n                        </mat-panel-title>\n                        \n                </mat-expansion-panel-header>\n                <ng-template matExpansionPanelContent>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                        <div class=\"mat-small seccion_descripcion\" fxFlexAlign=\"center\">\n                            {{seccion.descripcion}}\n                        </div>\n                        <div>\n                            <button mat-icon-button aria-label=\"Editar seccion\"  matTooltip=\"Editar Seccion\">\n                                <mat-icon>create</mat-icon>\n                            </button>\n                            <button mat-icon-button aria-label=\"Eliminar seccion\" matTooltip=\"Eliminar Seccion\">\n                                <mat-icon>delete</mat-icon>\n                            </button>\n                        </div>\n\n                    </div>\n                    <div class=\"mat-subheading-4 heading_icon\">\n                        <a (click)=\"nuevo_item()\">\n                            <mat-icon class=\"material-icons\" aria-hidden=\"false\" aria-label=\"Icono de add\">add_circle_outline</mat-icon>\n                        \n                            Nuevo MenúItem\n                        </a>\n                    </div>\n                </ng-template>    \n            </mat-expansion-panel>\n        </mat-accordion>\n    </div>\n    <ng-template #sinSecciones>\n        <div class=\"mat-h4\">No tiene secciones en su Menú</div>\n    </ng-template>\n</app-layout>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport { LocalConfigurationFacade } from \"src/app/configuration/services/localConfigurationFacade.service\";\nimport { AuthenticationService } from \"src/app/core/http/authentication.service\";\nimport { SidebarLink } from \"src/app/core/models/sidebar.model\";\nimport { User } from \"src/app/core/models/user.model\";\nimport { UserStateService } from \"src/app/core/state/user-state.service\";\n\n@Injectable()\nexport class AuthFacade{\n    localSubscription:Subscription;\n    constructor(\n        private authService:AuthenticationService, \n        private userStateService: UserStateService, \n        private router:Router,\n        private localConfigurationFacade:LocalConfigurationFacade){}\n\n    public login(user:User):void{\n         this.localSubscription = this.authService.login(user).pipe(\n            tap((user) =>{\n                this.userStateService.setUser(user);\n                \n                \n            }),\n            switchMap(\n                (user)=>{\n                    return this.localConfigurationFacade.updateLocalState();\n                }\n            )\n          ).subscribe(\n              (local) => {\n                  console.log('Local:', local[0]);\n                  this.router.navigateByUrl(this.next_path(local[0].estatus));\n                  this.unsubscribeLocal();  \n              }\n          )\n          \n    }\n\n    private unsubscribeLocal(){\n        this.localSubscription.unsubscribe();\n    }\n    private next_path(estatus:number){\n        if(estatus==0){\n            return ('configuracion/local');\n            \n        }else if(estatus==1){\n            return ('configuracion/menu');\n            \n        }else if(estatus==2){\n            return('dashboard');\n        }\n        return 'login'\n    }\n\n    public register(user:User):void{\n        this.authService.register(user).pipe(\n            tap((user) =>{\n                this.userStateService.setUser(user);\n                \n                \n            }),\n            switchMap(\n                (user)=>{\n                    return this.localConfigurationFacade.updateLocalState();\n                }\n            )\n          ).subscribe(\n            (local) => {\n                this.router.navigateByUrl(this.next_path(local.estatus));\n              \n            }\n          )\n\n    }\n    public getUserState():Observable<User>{\n        return this.userStateService.user$;\n    }\n\n    public getUserSideBarNav():Observable<SidebarLink[]>{\n        \n        return this.userStateService.sidenavLinks$;\n    }\n    public logOut(){\n        this.authService.logout();\n        this.router.navigateByUrl('login');\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\n\n@Injectable()\nexport class LocalStateService{\n    private _local: BehaviorSubject<Local> = new BehaviorSubject<Local>(null);\n\n    public readonly local$:Observable<Local> = this._local.asObservable();\n\n    constructor(){}\n\n    public setLocal(localParam:Local){\n        console.log('LocalState:', localParam);\n        this._local.next(localParam);\n        \n    }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { API_URL } from \"../state/storage\";\n\n@Injectable()\nexport class LocalConfigurationService {\n\n    constructor(@Inject(API_URL) private apiUrl: string, private http:HttpClient){}\n\n    public getLocalByUserId(userId:string):Observable<Local>{\n        let url:string = `${this.apiUrl}/locales/byuser/${userId}`;\n        return this.http.get<Local>(url);\n            \n\n    }    \n\n    public queryUrlMenu(propuestaUrl:string):Observable<Local[]>{\n        let url:string = `${this.apiUrl}/locales/byurlmenu/${propuestaUrl}`;\n        return this.http.get<Local[]>(url);\n    }\n\n    public createLocal(local:Local):Observable<Local>{\n        if(local){\n            let url:string = `${this.apiUrl}/locales`;\n            return this.http.post<Local>(url, local);\n        }\n        return null;\n    }\n\n    public updateLocal(local:Local):Observable<Local>{\n        //console.log('Local recibido:', local);\n        if(local){\n            let url:string = `${this.apiUrl}/locales/${local._id}`;\n            return this.http.put<Local>(url, local);\n        }\n        return null;\n        \n    }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\n\n@Component({\n  selector: 'app-user-menu',\n  templateUrl: './user-menu.component.html',\n  styleUrls: ['./user-menu.component.scss']\n})\nexport class UserMenuComponent implements OnInit {\n\n  userName:String='';\n  @Output() signOut: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public signOutEmit(): void {\n    this.signOut.emit();\n  }\n}\n","<button class=\"user-button\" mat-mini-fab [matMenuTriggerFor]=\"userMenu\">\n    <mat-icon class=\"user-button__icon\">person</mat-icon>\n</button>\n<mat-menu #userMenu=\"matMenu\" xPosition=\"before\">\n    <div class=\"user-menu-title\">\n        <h4 class=\"user-menu-title__name\">{{userName}}</h4>\n    </div>    \n    <div class=\"sign-button-wrapper\">\n        <button class=\"sign-button\" mat-flat-button (click)=\"signOutEmit()\">Sign out</button>\n    </div>\n</mat-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthPageComponent } from './container/auth-page/auth-page.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PasswordMatchValidationService } from './services/passwordMatchValidation.service';\nimport { AuthFacade } from './services/authFacade.service';\nimport { ConfigurationModule } from '../configuration/configuration.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, AuthPageComponent, RegisterComponent],\n  imports: [\n    AuthenticationRoutingModule,\n    SharedModule,\n    ConfigurationModule\n  ],\n  providers:[\n    PasswordMatchValidationService,\n    AuthFacade\n  ]\n})\nexport class AuthenticationModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HeaderComponent} from './header/container/header.component';\nimport {UserMenuComponent} from './header/components/user-menu/user-menu.component';\nimport {SidebarComponent} from './sidebar/sidebar.component';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {LayoutComponent} from './layout/layout.component';\nimport {RouterModule} from '@angular/router';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {AlertDialogComponent} from './alert-dialog/alert-dialog.component';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatMomentDateModule} from '@angular/material-moment-adapter';\nimport {NgxCurrencyModule, CurrencyMaskInputMode} from 'ngx-currency';\nimport { GuaraniCurrencyPipe } from './pipes/guarani-currency.pipe';\nimport { ExpansionHelperComponent } from './expansion-helper/expansion-helper.component';\n\n\n\nexport const customCurrencyMaskConfig = {\n  align: \"left\",\n  allowNegative: false,\n  allowZero: false,\n  decimal: \",\",\n  precision: 0,\n  prefix: \"Gs \",\n  suffix: \"\",\n  thousands: \".\",\n  nullable: true,\n  min: null,\n  max: null,\n  inputMode: CurrencyMaskInputMode.NATURAL\n};\n\n\n\n\n\n@NgModule({\n  declarations: \n  [\n    HeaderComponent, \n    UserMenuComponent, \n    SidebarComponent, \n    LayoutComponent,\n    AlertDialogComponent,\n    GuaraniCurrencyPipe,\n    ExpansionHelperComponent\n    \n  ],\n  imports: \n  [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,//Module FlexLayout\n    NgxCurrencyModule.forRoot(customCurrencyMaskConfig), //Modulo para manejo de input de dinero\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatMomentDateModule\n    \n\n\n  ],\n  exports:\n  [\n    CommonModule,\n    LayoutComponent,\n    NgxCurrencyModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    GuaraniCurrencyPipe,\n    ExpansionHelperComponent\n    \n    \n\n  ]\n})\nexport class SharedModule { }\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MenúDigital';\n}\n","<router-outlet></router-outlet>","import { Inject, Injectable } from \"@angular/core\";\nimport {HttpHandler, HttpInterceptor, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse} from '@angular/common/http';\nimport { Observable, of, throwError } from \"rxjs\";\nimport {catchError, map, retry, tap} from \"rxjs/operators\";\nimport {TOKEN_NAME } from \"../state/storage\";\nimport { ToastrService } from \"ngx-toastr\";\n\n\n@Injectable()\nexport class HttpErrorHandlerInterceptor implements HttpInterceptor{\n    constructor(@Inject(TOKEN_NAME) private token_name: string, public toasterService: ToastrService ){}\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n        \n        const token: string = localStorage.getItem(this.token_name);\n        //console.log('Interceptor.req', req);\n        if (token) {\n            req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\n        }\n\n        if (!req.headers.has('Content-Type')) {\n            //req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\n        }\n\n        req = req.clone({ headers: req.headers.set('Accept', 'application/json') });\n\n        return next.handle(req).pipe(\n            retry(1),\n            tap( (evt:any) => {\n                if(evt instanceof HttpResponse){\n                    if(evt.body && evt.body.success){\n                        this.toasterService.success(evt.body.success.message, \n                            evt.body.success.title, { positionClass: 'toast-top-center' });\n                    }\n                }\n            }),\n            catchError((error: any) => {\n                let errorMessage = '';\n                if(error.error instanceof ErrorEvent){\n                    //client side error\n                    errorMessage = `Error: ${error.error.message}`;\n                    this.toasterService.error(error.error.message, error.error.title, { positionClass: 'toast-top-center' });\n                }else{\n                    errorMessage = `Error status: ${error.status}\\nMessage: ${error.message}`;\n                    this.toasterService.error(error.error.message, error.error.title, { positionClass: 'toast-top-center' });\n                }\n                console.log(errorMessage);\n                return of(error);\n            })\n        )\n    }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Local } from \"../models/local.model\";\nimport { MenuItem } from \"../models/menuItem.model\";\nimport { SeccionMenu } from \"../models/seccion-menu.model\";\nimport { API_URL } from \"../state/storage\";\n\n@Injectable()\nexport class MenuConfigurationService {\n\n    constructor(@Inject(API_URL) private apiUrl: string, private http:HttpClient){}\n\n    public getSecciones(localId:string):Observable<SeccionMenu[]>{\n        let url:string = `${this.apiUrl}/locales/${localId}/secciones/`;\n        console.log('Url a llamar:', url);\n        return this.http.get<SeccionMenu[]>(url);\n    }\n    \n    public createSeccion(localId:string,nuevaSeccion:SeccionMenu):Observable<SeccionMenu>{\n        if(nuevaSeccion){\n            let url:string = `${this.apiUrl}/locales/${localId}/secciones/`;\n            //console.log('Url:', url);\n            return this.http.post<SeccionMenu>(url, nuevaSeccion);\n        }\n        return null;\n    }\n\n    public deleteSeccion(localId:string, seccionId:string):Observable<{}>{\n        \n        let url:string = `${this.apiUrl}/locales/${localId}/secciones/${seccionId}`;\n        console.log('Url a llamar con delete:', url);\n        return this.http.delete(url);\n    }\n\n    public createItemMenu(localId:string, menuitem:MenuItem):Observable<MenuItem>{\n        console.log('MenuItem recibido:', menuitem);\n        const formData = this.loadmenuItemFormData(menuitem);\n        if(formData != null){\n            console.log(formData.get('nombre')+\",\"+ formData.get('descripcion')+\",\"+formData.get('precio')+\",\"+formData.get('imagen')+\",\"+formData.get('tamano'));\n            let url:string = `${this.apiUrl}/locales/${localId}/secciones/${menuitem.seccion}/menuitems`;\n            console.log('Url:', url);\n            return this.http.post<MenuItem>(url, formData);\n        }\n        return null;\n    }\n    private loadmenuItemFormData(menuitem:MenuItem):FormData{\n        if(menuitem && menuitem.seccion && menuitem.seccion){\n            let formData:any = new FormData();\n            formData.append('nombre',menuitem.nombre);\n            formData.append('descripcion',menuitem.descripcion);\n            formData.append('precio', menuitem.precio);\n            formData.append('seccion', menuitem.seccion);\n            formData.append('imagen',menuitem.imagen);\n           \n            return formData;\n        }\n        return null;\n    }\n\n    public updateMenuItem(localId:string, menuitem:MenuItem):Observable<MenuItem>{\n        console.log('MenuItem recibido:', menuitem);\n        const formData = this.loadmenuItemFormData(menuitem);\n        if(formData != null){\n            console.log(formData.get('nombre')+\",\"+ formData.get('descripcion')+\",\"+formData.get('precio')+\",\"+formData.get('imagen')+\",\"+formData.get('tamano'));\n            let url:string = `${this.apiUrl}/locales/${localId}/secciones/${menuitem.seccion}/menuitems`;\n            console.log('Url:', url);\n            return this.http.put<MenuItem>(url, formData);\n        }\n        return null;\n    }\n\n    public deleteItemMenu(localId:string, menuitem:MenuItem):Observable<{}>{\n        console.log('MenuItem a eliminar:', menuitem, \" del local:\", localId);\n        let url:string = `${this.apiUrl}/locales/${localId}/secciones/${menuitem.seccion}/menuitems/${menuitem._id}`;\n        console.log('Url a llamar con delete:', url);\n        return this.http.delete(url);\n    }\n\n\n    \n    public updateLocal(local:Local):Observable<Local>{\n        if(local){\n            let url:string = `${this.apiUrl}/locales/${local._id}`;\n            return this.http.put<Local>(url, local);\n        }\n        return null;\n        \n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {AuthenticationModule} from './authentication/authentication.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CoreModule } from './core/core.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AuthenticationModule,\n    CoreModule,\n    ToastrModule.forRoot()\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport { AuthResponse } from \"../models/authresponse.model\";\nimport { User } from \"../models/user.model\";\nimport { BROWSER_STORAGE } from \"../state/storage\";\n\n@Injectable()\nexport class AuthenticationService {\n    private apiBaseUrl = 'http://localhost:3000/api';\n    private tokenName: string = \"menuDigital-token\";\n\n    constructor(@Inject(BROWSER_STORAGE) private storage: Storage,\n        private http:HttpClient){}\n    \n    public login(user:User): Observable<User>{\n        const url: string = `${this.apiBaseUrl}/login`;\n        return this.http.post<AuthResponse>(url, user)\n                .pipe(\n                    tap( (response) => {\n                        this.storage.setItem(this.tokenName, response.token);\n                    }),\n                    switchMap((result) => {\n                        if(result.token){\n                            const token: string = result.token;\n                            const loggedUser:User = JSON.parse(atob(token.split('.')[1]));\n                            return of(loggedUser);\n                        }\n                        else{\n                            return null;\n                        }\n                        \n                    })\n                )\n    }\n    public getToken(): string {\n        return this.storage.getItem(this.tokenName);\n    }\n    \n\n    public isLoggedIn(): boolean{\n        const token: string = this.getToken();\n        if(token){\n            //Se usa atob para decodificar el token\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            return payload.exp > (Date.now()/1000);\n        }else {\n            return false;\n        }\n    }\n\n    public getCurrentUser(): User{\n        if(this.isLoggedIn()){\n            const token: string = this.getToken();\n            const {_id, email, name, profile} = JSON.parse(atob(token.split('.')[1]));\n            return {_id, email, name, profile} as User;\n        }else{\n            return null;\n        }\n    }\n\n    public register(user:User): Observable<User>{\n        const url: string = `${this.apiBaseUrl}/register`;\n        return this.http.post<AuthResponse>(url, user)\n                .pipe(\n                    tap( (response) => {\n                        this.storage.setItem(this.tokenName, response.token);\n                    }),\n                    switchMap((result) => {\n                        if(result.token){\n                            const token: string = result.token;\n                            const loggedUser:User = JSON.parse(atob(token.split('.')[1]));\n                            return of(loggedUser);\n                        }\n                        else{\n                            return null;\n                        }\n                        \n                    })\n                )\n    }\n    public logout(){\n        this.storage.removeItem(this.tokenName);\n    }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() userName$: Observable<string>;\n  @Output() signOutEvent = new EventEmitter<string>();\n  @Output() menuClick: EventEmitter<boolean> = new EventEmitter();\n  toggleValue: boolean=true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public signOut(): void {\n    console.log('Sign Out');\n    this.signOutEvent.emit('SignOut');\n    \n  }\n\n  public toggleForMenuClick(){\n    this.toggleValue = ! this.toggleValue;\n    this.menuClick.emit(this.toggleValue);\n    \n  }\n\n}\n","<mat-toolbar class=\"header\" >\n    <div class=\"header__title\">\n        <mat-icon *ngIf=\"!toggleValue\" (click)=\"toggleForMenuClick()\" class=\"menu\">menu</mat-icon>\n        <mat-icon *ngIf=\"toggleValue\" (click)=\"toggleForMenuClick()\" class=\"menu\">arrow_back</mat-icon>\n        Bienvenido {{userName$ | async}}\n    </div>\n    \n    <span class=\"central-stretchable-space\"></span>\n    <a class=\"action\" (click)=\"signOut()\">Salir</a>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable()\nexport class PasswordMatchValidationService {\n\n  patternValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\n      const valid = regex.test(control.value);\n      return valid ? null : { invalidPassword: true };\n    };\n  }\n  \n\n  MatchPassword(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n      } else {\n        confirmPasswordControl.setErrors(null);\n      }\n    }\n  }\n\n  userNameValidator(userControl: AbstractControl) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.validateUserName(userControl.value)) {\n          resolve({ userNameNotAvailable: true });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n  }\n\n  validateUserName(userName: string) {\n    const UserList = ['ankit', 'admin', 'user', 'superuser'];\n    return (UserList.indexOf(userName) > -1);\n  }\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MenuItem } from 'src/app/core/models/menuItem.model';\n\n@Component({\n  selector: 'app-form-menu-item',\n  templateUrl: './form-menu-item.component.html',\n  styleUrls: ['./form-menu-item.component.scss']\n})\nexport class FormMenuItemComponent implements OnInit {\n\n  menuItemFormGroup:FormGroup;\n  imagenMenuItem:string = \"../../../../assets/camara.png\";\n\n  \n  constructor(private fb:FormBuilder, public dialogRef: MatDialogRef<FormMenuItemComponent>) { }\n\n  @Output() onSaveMenuItem = new EventEmitter<MenuItem>();\n\n  ngOnInit(): void {\n    this.menuItemFormGroup = this.fb.group(\n      {\n        imagen:[''],\n        imagenUrl:[''],\n        titulo:['', Validators.required],\n        descripcion:[''],\n        precio:['', Validators.required]\n      }\n    )\n  }\n\n  public crear_menuItem(){\n    \n  }\n  \n  public subirFoto(event){\n    document.getElementById(\"fileInput-menuItem\").click();\n  }\n\n  public showPreviewMenuItemFoto(event){\n    const reader = new FileReader();\n    \n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n    \n      reader.onload = () => {\n   \n        this.imagenMenuItem = reader.result as string;\n     \n        this.menuItemFormGroup.patchValue({\n          imagen: file\n        });\n   \n      };\n    }\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n\n    <div class=\"mat-headline\">Nuevo Menú Item</div>\n    <app-expansion-helper></app-expansion-helper>\n\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { Local } from 'src/app/core/models/local.model';\nimport { LocalConfigurationFacade } from '../services/localConfigurationFacade.service';\n\n@Component({\n  selector: 'app-local-configuration',\n  templateUrl: './local-configuration.component.html',\n  styleUrls: ['./local-configuration.component.scss']\n})\nexport class LocalConfigurationComponent implements OnInit, OnDestroy {\n\n  local$:Observable<Local>;\n\n  subscriptionLocal$:Subscription;\n  \n  localForm: FormGroup;\n\n  message: string='';\n  showMessage:boolean = false;\n\n  constructor(private fb: FormBuilder, private localconfigurationFacade: LocalConfigurationFacade) { }\n  \n  ngOnDestroy(): void {\n    this.subscriptionLocal$.unsubscribe()\n\n  }\n\n  ngOnInit(): void {\n    this.localForm = this.fb.group({\n      _id:[''],\n      nombreDelLocal: ['', Validators.required],\n      ruc: ['', Validators.required],\n      direccionDelLocal:['', Validators.required],\n      nombreDelContacto: ['', Validators.required],\n      emailDelContacto:['', Validators.required],\n      celularDelContacto:['', Validators.required],\n      urlMenuDigital:['', Validators.required],\n      localNameUrl:['', Validators.required],\n      estatus:['']\n    });\n   \n    this.local$ = this.localconfigurationFacade.updateLocalState();\n\n    this.actualizar_campos(); \n\n    \n  }\n\n  private actualizar_campos():void{\n   \n    this.subscriptionLocal$ = this.local$.subscribe(\n      (local) =>{\n        \n          this.localForm.patchValue(local[0]);\n          this.verificarMenuDigitalUrl();\n        \n      }\n    )\n  }\n\n  public verificarMenuDigitalUrl(){\n    let value:string = this.localForm.get('urlMenuDigital').value;\n    let nombre:string = this.localForm.get('nombreDelLocal').value;\n    let localNombreUrl:string = this.localForm.get('localNameUrl').value;\n    \n    \n    \n    if(value=='' && nombre!=''){\n      let propuestaUrlMenu = this.localForm.get('nombreDelLocal').value.toLowerCase().replace(/\\s/g, '');\n      this.localconfigurationFacade.queryUrlMenu(propuestaUrlMenu).subscribe(\n        (urlMenu) => {\n          const num = urlMenu.lastIndexOf('/');\n\n          this.localForm.patchValue({\n            urlMenuDigital: urlMenu,\n            localNameUrl: urlMenu.substring(num+1)\n          })\n          \n        }\n      )\n    }\n    if(localNombreUrl == '' && value.length>0){\n      const num = value.lastIndexOf('/');\n      this.localForm.patchValue({\n        \n        localNameUrl: value.substring(num+1)\n      })\n    }\n    \n    if(this.localForm.invalid){\n      this.message =\"Por favor completa todos los campos sobre tu local Gastronómico para poder crear tu MenuDigital\";\n      this.showMessage = true;\n    }\n    \n\n    \n  }\n\n  public modificarNombre(){\n    let propuestaUrlMenu = this.localForm.get('nombreDelLocal').value.toLowerCase().replace(/\\s/g, '');\n      this.localconfigurationFacade.queryUrlMenu(propuestaUrlMenu).subscribe(\n        (urlMenu) => {\n          this.localForm.patchValue({\n            urlMenuDigital: urlMenu\n          })\n        }\n      )\n  }\n\n  \n  public onSubmit(){\n    this.localForm.patchValue(\n      {\n        estatus:1\n      }\n    )\n    console.log('Local antes de guardar:', this.localForm.value);\n    this.localconfigurationFacade.saveLocal(this.localForm.value);\n  }\n\n}\n","<app-layout>\n  <div class=\"container\">\n    <div class=\"mensaje_feedback\">\n      <p class=\"mat-subheading-2 message-full-width\" *ngIf=\"showMessage\">{{message}}</p>\n    </div>\n    <form [formGroup]=\"localForm\" (ngSubmit)=\"onSubmit()\">\n   \n    <div class=\"mat-title\">Mi Local Gastronómico</div>\n    <br>\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Nombre del local:</mat-label>\n            <input matInput readonly=\"false\" type=\"text\" (change)=\"modificarNombre()\" (focusout)=\"verificarMenuDigitalUrl()\" formControlName=\"nombreDelLocal\">\n            <mat-error *ngIf=\"localForm.controls['nombreDelLocal'].hasError('required')\">\n              Nombre del local es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n       \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>RUC:</mat-label>\n            <input  readonly=\"false\" type=\"text\" matInput  formControlName=\"ruc\">\n            <mat-error *ngIf=\"localForm.controls['ruc'].hasError('required')\">\n              RUC es <strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n       \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Dirección del local:</mat-label>\n            <input readonly=\"false\" type=\"text\" matInput formControlName=\"direccionDelLocal\">\n            <mat-error *ngIf=\"localForm.controls['direccionDelLocal'].hasError('required')\">\n              La dirección es <strong>obligatoria</strong>\n            </mat-error>\n    </mat-form-field>\n     \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Nombre del contacto:</mat-label>\n            <input  readonly=\"false\" type=\"text\" matInput formControlName=\"nombreDelContacto\">\n            <mat-error *ngIf=\"localForm.controls['nombreDelContacto'].hasError('required')\">\n              El nombre del contacto es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n       \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email del local:</mat-label>\n            <input  readonly=\"false\" type=\"email\" matInput formControlName=\"emailDelContacto\">\n            <mat-error *ngIf=\"localForm.controls['emailDelContacto'].hasError('required')\">\n              El email del contacto es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n    \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Celular del contacto:</mat-label>\n            <input  readonly=\"false\" type=\"text\" matInput formControlName=\"celularDelContacto\">\n            <mat-error *ngIf=\"localForm.controls['celularDelContacto'].hasError('required')\">\n              El número de celular del contacto es<strong>obligatorio</strong>\n            </mat-error>\n    </mat-form-field>\n        \n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Dirección web de tu MenuDigital:</mat-label>\n            <input  readonly=\"true\" type=\"text\" matInput formControlName=\"urlMenuDigital\">\n            \n    </mat-form-field>\n    <div>\n      <button mat-raised-button disabled=\"{{!localForm.valid}}\" class=\"boton_guardar\" type=\"submit\">Guardar</button>\n    </div>\n  </form>\n</div>\n\n</app-layout>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { httpInterceptorProviders } from './interceptors';\nimport { AuthenticationService } from './http/authentication.service';\nimport { UserStateService } from './state/user-state.service';\nimport { LocalStateService } from './state/local-state.service';\nimport { LocalConfigurationService } from './http/localConfiguration.service';\nimport { MenuItemsStateService } from './state/menuItems-state.service';\nimport { MenuConfigurationService } from './http/menuConfiguracion.service';\nimport { PublicMenuService } from './http/publicMenu.service';\nimport { SeccionesStateService } from './state/secciones-state.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    httpInterceptorProviders,\n    AuthenticationService,\n    LocalConfigurationService,\n    UserStateService,\n    LocalStateService,\n    SeccionesStateService,\n    MenuItemsStateService,\n    MenuConfigurationService,\n    PublicMenuService\n    \n    \n    \n    \n  ]\n})\nexport class CoreModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SeccionMenu } from 'src/app/core/models/seccion-menu.model';\n\n@Component({\n  selector: 'app-form-seccion',\n  templateUrl: './form-seccion.component.html',\n  styleUrls: ['./form-seccion.component.scss']\n})\nexport class FormSeccionComponent implements OnInit {\n\n  seccionFormGroup:FormGroup;\n  @Output() onSaveSeccion = new EventEmitter<SeccionMenu>();\n  constructor(private fb:FormBuilder, public dialogRef: MatDialogRef<FormSeccionComponent>) { }\n\n  ngOnInit(): void {\n    this.seccionFormGroup = this.fb.group({\n      titulo:['', Validators.required],\n      descripcion:[''],\n      puesto:['', Validators.required]\n    });\n  }\n\n  public crear_seccion(){\n    this.onSaveSeccion.emit(this.seccionFormGroup.value);\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<form [formGroup]=\"seccionFormGroup\" (ngSubmit)=\"crear_seccion()\">\n    <div class=\"mat-headline\">Nueva Sección</div>\n\n    <mat-form-field class=\"full_width\" appearance=\"outline\">\n        <mat-label>Titulo de la sección</mat-label>\n        <input matInput formControlName=\"titulo\" placeholder=\"Titulo\">\n    </mat-form-field>\n    <mat-form-field class=\"full_width\" appearance=\"outline\">\n        <mat-label>Descripción de la sección</mat-label>\n        <textarea  matInput formControlName=\"descripcion\" placeholder=\"Descripción\"></textarea>\n    </mat-form-field>\n    <mat-form-field class=\"full_width\" appearance=\"outline\">\n        <mat-label>Posición en el Menú</mat-label>\n        <input matInput formControlName=\"puesto\" placeholder=\"Puesto\">\n        <!--mat-hint align=\"start\">En qué posición estará esta sección</mat-hint-->\n    </mat-form-field>\n    <button class=\"boton_guardar\" mat-raised-button  type=\"submit\">Crear</button>\n</form>\n","<mat-nav-list *ngFor=\"let sidenavLink of sidebarLinks$ | async\">\n    <mat-list-item routerLink=\"{{sidenavLink.routeLink}}\" routerLinkActive=\"active\">\n      <mat-icon>{{sidenavLink.icon}}</mat-icon> {{sidenavLink.label}}\n    </mat-list-item>\n\n    \n    \n</mat-nav-list>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SidebarLink } from 'src/app/core/models/sidebar.model';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  @Input() sidebarLinks$: Observable<SidebarLink[]>;\n  //@Input() sidebarLinks: SidebarLink[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'guaraniCurrency'\n})\nexport class GuaraniCurrencyPipe implements PipeTransform {\n\n  transform(val: number): string {\n    // Format the output to display any way you want here.\n    // For instance:\n    if (val !== undefined && val !== null) {\n      return val.toLocaleString('es-PY', { style: 'currency', currency: 'PYG' });\n    } else {\n      return '';\n    }\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { SeccionMenu } from \"../models/seccion-menu.model\";\n\n@Injectable()\nexport class SeccionesStateService{\n    private _secciones: BehaviorSubject<SeccionMenu[]> = new BehaviorSubject<SeccionMenu[]>(null);\n\n    public readonly secciones$:Observable<SeccionMenu[]> = this._secciones.asObservable();\n\n    constructor(){}\n\n    public setSecciones(secciones:SeccionMenu[]){\n        console.log('SeccionesState:', secciones);\n        this._secciones.next(secciones);\n        \n    }\n\n    public addSeccion(seccion:SeccionMenu){\n        const secciones = this._secciones.getValue();\n        secciones.push(seccion);\n        this._secciones.next(secciones);\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport {AuthPageComponent} from './authentication/container/auth-page/auth-page.component';\n\nconst routes:Routes = [\n  {\n    path: 'login',\n    component: AuthPageComponent\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'configuracion',\n    loadChildren: () => import('./configuration/configuration.module').then(m => m.ConfigurationModule)\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n  },\n  {\n    path: 'menudigital/:nombrelocal',\n    loadChildren: () => import('./public-menu/public-menu.module').then(m => m.PublicMenuModule)\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {InjectionToken} from '@angular/core';\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n   providedIn: 'root',\n   factory: () => localStorage \n});\n\nexport const TOKEN_NAME = new InjectionToken<String>('Token Name', {\n    providedIn: 'root',\n    factory: () => {return 'menuDigital-token'} \n });\n\n export const API_URL = new InjectionToken<String>('ApiUrl', {\n   providedIn: 'root',\n   factory: () => {return 'http://localhost:3000/api'} \n});\n\n","import { NgModule } from '@angular/core';\n\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\nimport { LocalConfigurationComponent } from './local-configuration/local-configuration.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { LocalConfigurationFacade } from './services/localConfigurationFacade.service';\nimport { MenuListComponent } from './menu-configuration/container/menu-list.component';\nimport { MenuListFacade } from './services/menuListFacade.service';\nimport { FormSeccionComponent } from './menu-configuration/components/form-seccion/form-seccion.component';\nimport { FormMenuItemComponent } from './menu-configuration/components/form-menu-item/form-menu-item.component';\n\n\n@NgModule({\n  declarations: [LocalConfigurationComponent, MenuListComponent, FormSeccionComponent, FormMenuItemComponent],\n  imports: [\n    ConfigurationRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    LocalConfigurationFacade,\n    MenuListFacade\n  ]\n})\nexport class ConfigurationModule { }\n","import { state } from \"@angular/animations\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { SidebarLink } from \"../models/sidebar.model\";\nimport { User } from \"../models/user.model\";\n\n@Injectable()\nexport class UserStateService{\n    private _user: BehaviorSubject<User> = new BehaviorSubject<User>(null);\n\n    public readonly user$:Observable<User> = this._user.asObservable();\n\n    private _sidenavLinks: BehaviorSubject<SidebarLink[]> = new BehaviorSubject<SidebarLink[]>(null);\n\n    public readonly sidenavLinks$:Observable<SidebarLink[]> = this._sidenavLinks.asObservable();\n\n    constructor(){}\n\n    public setUser(userParam:User){\n        \n        this._user.next(userParam);\n        if(userParam.role){\n            this.setUserNavLinksByProfile(userParam.role);\n            \n        }\n    }\n\n    public setUserNavLinksByProfile(profile:string):void{\n        switch(profile){\n            case('user'):\n                this._sidenavLinks.next(this.getUserNavLinks());\n                break;\n            default:\n                this._sidenavLinks.next(this.getUserNavLinks());\n                break;\n\n        }\n\n    }\n\n    private getUserNavLinks():SidebarLink[]\n    {\n        \n        return[\n            {\n              label: 'Reportes',\n              icon: 'analytics',\n              routeLink: '/dashboard'\n            },\n            {\n              label: 'Mi Local',\n              icon: 'restaurant',\n              routeLink: '/configuracion/local'\n            },\n            {\n              label: 'Mi Menu Digital',\n              icon: 'menu_book',\n              routeLink: '/configuracion/menu'\n            },\n            {\n              label: 'Pedidos',\n              icon: 'topic',\n              routeLink: '/pedidos'\n            }\n      \n      \n          ];\n    }\n    \n}","import { Component, Inject, Input, OnInit, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EventEmitter } from 'events';\n\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss']\n})\nexport class AlertDialogComponent implements OnInit {\n  titulo:string;\n  constructor(public dialogRef: MatDialogRef<AlertDialogComponent>, @Inject(MAT_DIALOG_DATA) public data:{titulo: string}) { \n    this.titulo = data.titulo;\n   }\n\n  ngOnInit(): void {\n  }\n\n  public onNoClick(){\n    this.dialogRef.close();\n  }\n}\n","<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\n<h2 mat-dialog-title>{{titulo}}</h2>\n\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"false\">No</button>\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n  <button mat-button [mat-dialog-close]=\"true\">Si</button>\n</mat-dialog-actions>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}